AC_PREREQ([2.69]) # autoconf minimum version
LT_PREREQ([2.4.5]) # libtool minium version
AC_INIT([opengl_tests], [0.01]) # pkg information
AC_CONFIG_HEADERS([src/config.h]) # where to put config.h
AC_CONFIG_AUX_DIR([build-aux]) # where to put files needed by autotools
AC_CONFIG_MACRO_DIR([m4]) # where to search for extra macros
AM_INIT_AUTOMAKE([subdir-objects foreign -Wall -Wno-gnu]) # init automake

# AM_PROG_AR and AM_PROG_AS need to be called before LT_INIT
AM_PROG_AR # look for archiver
AM_PROG_AS # look for assembler
LT_INIT # init libtool
# less verbose output (e.g. CC program.o\nAS asm.o\nCCLD program)
# normal compilation output can be obtained by adding V=1 to make invocation
AM_SILENT_RULES([yes])
# Checks for programs.

AC_PROG_AWK # look for awk
AC_PROG_CC # look for C compiler
AC_PROG_CC_C99 # insure C compiler supports C99
AC_PROG_INSTALL # look for install (probably copy it to config_aux_dir)
AC_PROG_LN_S # look for program to make symbolic links

# Check for gcc, in order to set some compilier specific flags
# Specifically this limits the number of errors gcc will output
AS_CASE([$CC], [gcc], [cflags_extra='-fmax-errors=20'],[cflags_extra=''])
# create makefile variable from shell variable
AC_SUBST([CFLAGS_EXTRA],[$cflags_extra])

# example check for a program, specifically perl
# set have_perl to true if perl is found, othewise false
AC_PATH_PROG([PERL],[perl],[have_perl=false])
# autoconf archive macro, file defining the macro needs to be
# copied into the m4 directory
AX_PROG_PERL_VERSION([5.14], [have_perl=true], [have_perl=false])

# warn if we don't find perl, but it's not a fatal error
AS_IF([test "x$have_perl" != xtrue],
  [AC_MSG_WARN([Warning perl version 5.14 or greater not found.])])
# or if we really need perl, print error msg and exit
# AS_IF([test "x$have_perl" != xtrue],
#  [AC_MSG_ERROR([Error perl version 5.14 or greater not found.])])

AC_SUBST([HAVE_PERL],[$have_perl])


# required libraries
# 3rd argument is action if found, by default it appends the required
# linker flags to LIBS and defines HAVE_LIBRARY

AC_CHECK_LIB([dl], [dlsym])
AC_CHECK_LIB([pthread], [pthread_create])
AC_CHECK_LIB([m], [cos])
AC_CHECK_LIB([gmp], [__gmpz_init])
AC_CHECK_LIB([mpfr], [mpfr_init])

# optional libraries (--with/--without arguments to configure)

# Provide a --with-readline option, argument should be one of yes, no or check
# the default is check. For yes and check searches for readline, and adds it
# to LIBS if found. If not found and argument was yes configure fails.
# If argument was no just don't include readline support
AC_ARG_WITH([readline],
  [AS_HELP_STRING([--with-readline],
    [Use readline for command line editing (default=check)])],
  [],
  [with_readline=check])
AS_IF([test "x$with_readline" != xno],
  [AC_CHECK_LIB([readline], [readline],
     [AC_DEFINE([HAVE_READLINE], [1],
                [Define if readline is enabled])
                [LIBS="$LIBS -lreadline"]],
     [if test "x$with_readline" != xcheck; then
        AC_MSG_FAILURE(
          [--with-readline was given, but libreadline not found])
     fi])])

# Optional features
# Provide a configure option --enable/disable--debug to enable/disaple
# debugging code. Defaults to yes.
# Defines one of the macros DEBUG or NDEBUG in config.h.
AC_ARG_ENABLE([debug],
  [AS_HELP_STRING([--enable-debug],
    [enable debugging options, currently the default])],
  [enable_debug=$enableval],
  [enable_debug=yes])
AS_IF([test "x$enable_debug" == xyes],
  [AC_DEFINE([DEBUG],[],[Enable debugging])],
  [AC_DEFINE([NDEBUG],[],[Disable debugging])])

# Example configuration of a subpackage using autotools, the example
# package is the bohem GC library.

# Append to configure args to pass an option to another package
AS_VAR_APPEND([ac_configure_args],[" --disable-gcj-support "])
# Run configure in these subdirectories
AC_CONFIG_SUBDIRS([src/bdwgc])
# What Makefiles should be generated, since we're using automake
# Each Makefile specified here shoud have an equivlent Makefile.am
# in the same directory
AC_CONFIG_FILES([Makefile
                 src/Makefile
                 tests/Makefile
                 doc/Makefile])
AC_OUTPUT # Generate output
