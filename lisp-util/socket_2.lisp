;;; This file was automatically generated by SWIG (http://www.swig.org).
;;; Version 3.0.2
;;;
;;; Do not make changes to this file unless you know what you are doing--modify
;;; the SWIG interface file instead.


;;;SWIG wrapper code starts here
(ql:quickload :cffi)
(defpackage socket
  (:use :cl :cffi))
(cl:in-package :socket)
(cffi:load-foreign-library "libc.so.6")
(cl:defmacro defanonenum (cl:&body enums)
   "Converts anonymous enums to defconstants."
  `(cl:progn ,@(cl:loop for value in enums
                        for index = 0 then (cl:1+ index)
                        when (cl:listp value) do (cl:setf index (cl:second value)
                                                          value (cl:first value))
                        collect `(cl:defconstant ,value ,index))))

(cl:eval-when (:compile-toplevel :load-toplevel)
  (cl:unless (cl:fboundp 'swig-lispify)
    (cl:defun swig-lispify (name flag cl:&optional (package cl:*package*))
      (cl:labels ((helper (lst last rest cl:&aux (c (cl:car lst)))
                    (cl:cond
                      ((cl:null lst)
                       rest)
                      ((cl:upper-case-p c)
                       (helper (cl:cdr lst) 'upper
                               (cl:case last
                                 ((lower digit) (cl:list* c #\- rest))
                                 (cl:t (cl:cons c rest)))))
                      ((cl:lower-case-p c)
                       (helper (cl:cdr lst) 'lower (cl:cons (cl:char-upcase c) rest)))
                      ((cl:digit-char-p c)
                       (helper (cl:cdr lst) 'digit 
                               (cl:case last
                                 ((upper lower) (cl:list* c #\- rest))
                                 (cl:t (cl:cons c rest)))))
                      ((cl:char-equal c #\_)
                       (helper (cl:cdr lst) '_ (cl:cons #\- rest)))
                      (cl:t
                       (cl:error "Invalid character: ~A" c)))))
        (cl:let ((fix (cl:case flag
                        ((constant enumvalue) "+")
                        (variable "*")
                        (cl:t ""))))
          (cl:intern
           (cl:concatenate
            'cl:string
            fix
            (cl:nreverse (helper (cl:concatenate 'cl:list name) cl:nil cl:nil))
            fix)
           package))))))

;;;SWIG wrapper code ends here

(cffi:defcstruct __sigset_t
	(__val :pointer))

(cffi:defcstruct timeval
	(tv_sec :long)
	(tv_usec :long))

(cffi:defcstruct fd_set
	(__fds_bits :pointer))

(cffi:defcfun ("select" select) :int
  (__nfds :int)
  (__readfds :pointer)
  (__writefds :pointer)
  (__exceptfds :pointer)
  (__timeout :pointer))

(cffi:defcfun ("pselect" pselect) :int
  (__nfds :int)
  (__readfds :pointer)
  (__writefds :pointer)
  (__exceptfds :pointer)
  (__timeout :pointer)
  (__sigmask :pointer))

(cffi:defcstruct iovec
	(iov_base :pointer)
	(iov_len :unsigned-long))

(cffi:defcfun ("readv" readv) :int
  (__fd :int)
  (__iovec :pointer)
  (__count :int))

(cffi:defcfun ("writev" writev) :int
  (__fd :int)
  (__iovec :pointer)
  (__count :int))

(cffi:defcfun ("preadv" preadv) :int
  (__fd :int)
  (__iovec :pointer)
  (__count :int)
  (__offset :long))

(cffi:defcfun ("pwritev" pwritev) :int
  (__fd :int)
  (__iovec :pointer)
  (__count :int)
  (__offset :long))

(cffi:defcenum __socket_type
	(:SOCK_STREAM #.1)
	(:SOCK_DGRAM #.2)
	(:SOCK_RAW #.3)
	(:SOCK_RDM #.4)
	(:SOCK_SEQPACKET #.5)
	(:SOCK_DCCP #.6)
	(:SOCK_PACKET #.10)
	(:SOCK_CLOEXEC #.#o2000000)
	(:SOCK_NONBLOCK #.#o0004000))

(cl:defconstant PF_UNSPEC 0)

(cl:defconstant PF_LOCAL 1)

(cl:defconstant PF_UNIX 1)

(cl:defconstant PF_FILE 1)

(cl:defconstant PF_INET 2)

(cl:defconstant PF_AX25 3)

(cl:defconstant PF_IPX 4)

(cl:defconstant PF_APPLETALK 5)

(cl:defconstant PF_NETROM 6)

(cl:defconstant PF_BRIDGE 7)

(cl:defconstant PF_ATMPVC 8)

(cl:defconstant PF_X25 9)

(cl:defconstant PF_INET6 10)

(cl:defconstant PF_ROSE 11)

(cl:defconstant PF_DECnet 12)

(cl:defconstant PF_NETBEUI 13)

(cl:defconstant PF_SECURITY 14)

(cl:defconstant PF_KEY 15)

(cl:defconstant PF_NETLINK 16)

(cl:defconstant PF_ROUTE 16)

(cl:defconstant PF_PACKET 17)

(cl:defconstant PF_ASH 18)

(cl:defconstant PF_ECONET 19)

(cl:defconstant PF_ATMSVC 20)

(cl:defconstant PF_RDS 21)

(cl:defconstant PF_SNA 22)

(cl:defconstant PF_IRDA 23)

(cl:defconstant PF_PPPOX 24)

(cl:defconstant PF_WANPIPE 25)

(cl:defconstant PF_LLC 26)

(cl:defconstant PF_CAN 29)

(cl:defconstant PF_TIPC 30)

(cl:defconstant PF_BLUETOOTH 31)

(cl:defconstant PF_IUCV 32)

(cl:defconstant PF_RXRPC 33)

(cl:defconstant PF_ISDN 34)

(cl:defconstant PF_PHONET 35)

(cl:defconstant PF_IEEE802154 36)

(cl:defconstant PF_CAIF 37)

(cl:defconstant PF_ALG 38)

(cl:defconstant PF_NFC 39)

(cl:defconstant PF_VSOCK 40)

(cl:defconstant PF_MAX 41)

(cl:defconstant AF_UNSPEC 0)

(cl:defconstant AF_LOCAL 1)

(cl:defconstant AF_UNIX 1)

(cl:defconstant AF_FILE 1)

(cl:defconstant AF_INET 2)

(cl:defconstant AF_AX25 3)

(cl:defconstant AF_IPX 4)

(cl:defconstant AF_APPLETALK 5)

(cl:defconstant AF_NETROM 6)

(cl:defconstant AF_BRIDGE 7)

(cl:defconstant AF_ATMPVC 8)

(cl:defconstant AF_X25 9)

(cl:defconstant AF_INET6 10)

(cl:defconstant AF_ROSE 11)

(cl:defconstant AF_DECnet 12)

(cl:defconstant AF_NETBEUI 13)

(cl:defconstant AF_SECURITY 14)

(cl:defconstant AF_KEY 15)

(cl:defconstant AF_NETLINK 16)

(cl:defconstant AF_ROUTE 16)

(cl:defconstant AF_PACKET 17)

(cl:defconstant AF_ASH 18)

(cl:defconstant AF_ECONET 19)

(cl:defconstant AF_ATMSVC 20)

(cl:defconstant AF_RDS 21)

(cl:defconstant AF_SNA 22)

(cl:defconstant AF_IRDA 23)

(cl:defconstant AF_PPPOX 24)

(cl:defconstant AF_WANPIPE 25)

(cl:defconstant AF_LLC 26)

(cl:defconstant AF_CAN 29)

(cl:defconstant AF_TIPC 30)

(cl:defconstant AF_BLUETOOTH 31)

(cl:defconstant AF_IUCV 32)

(cl:defconstant AF_RXRPC 33)

(cl:defconstant AF_ISDN 34)

(cl:defconstant AF_PHONET 35)

(cl:defconstant AF_IEEE802154 36)

(cl:defconstant AF_CAIF 37)

(cl:defconstant AF_ALG 38)

(cl:defconstant AF_NFC 39)

(cl:defconstant AF_VSOCK 40)

(cl:defconstant AF_MAX 41)

(cl:defconstant SOL_RAW 255)

(cl:defconstant SOL_DECNET 261)

(cl:defconstant SOL_X25 262)

(cl:defconstant SOL_PACKET 263)

(cl:defconstant SOL_ATM 264)

(cl:defconstant SOL_AAL 265)

(cl:defconstant SOL_IRDA 266)

(cl:defconstant SOMAXCONN 128)

(cffi:defcstruct sockaddr
	(sa_family :unsigned-short)
	(sa_data :pointer))

(cl:defconstant _SS_SIZE 128)

(cffi:defcstruct sockaddr_storage
	(ss_family :unsigned-short)
	(__ss_align :unsigned-long)
	(__ss_padding :pointer))

(defanonenum 
	(MSG_OOB #.#x01)
	(MSG_PEEK #.#x02)
	(MSG_DONTROUTE #.#x04)
	(MSG_CTRUNC #.#x08)
	(MSG_PROXY #.#x10)
	(MSG_TRUNC #.#x20)
	(MSG_DONTWAIT #.#x40)
	(MSG_EOR #.#x80)
	(MSG_WAITALL #.#x100)
	(MSG_FIN #.#x200)
	(MSG_SYN #.#x400)
	(MSG_CONFIRM #.#x800)
	(MSG_RST #.#x1000)
	(MSG_ERRQUEUE #.#x2000)
	(MSG_NOSIGNAL #.#x4000)
	(MSG_MORE #.#x8000)
	(MSG_WAITFORONE #.#x10000)
	(MSG_FASTOPEN #.#x20000000)
	(MSG_CMSG_CLOEXEC #.#x40000000))

(cffi:defcstruct msghdr
	(msg_name :pointer)
	(msg_namelen :unsigned-int)
	(msg_iov :pointer)
	(msg_iovlen :unsigned-long)
	(msg_control :pointer)
	(msg_controllen :unsigned-long)
	(msg_flags :int))

(cffi:defcstruct cmsghdr
	(cmsg_len :unsigned-long)
	(cmsg_level :int)
	(cmsg_type :int))

(cffi:defcfun ("__cmsg_nxthdr" __cmsg_nxthdr) :pointer
  (__mhdr :pointer)
  (__cmsg :pointer))

(defanonenum 
	(SCM_RIGHTS #.#x01))

(cl:defconstant FIOSETOWN #x8901)

(cl:defconstant SIOCSPGRP #x8902)

(cl:defconstant FIOGETOWN #x8903)

(cl:defconstant SIOCGPGRP #x8904)

(cl:defconstant SIOCATMARK #x8905)

(cl:defconstant SIOCGSTAMP #x8906)

(cl:defconstant SIOCGSTAMPNS #x8907)

(cl:defconstant SOL_SOCKET 1)

(cl:defconstant SO_DEBUG 1)

(cl:defconstant SO_REUSEADDR 2)

(cl:defconstant SO_TYPE 3)

(cl:defconstant SO_ERROR 4)

(cl:defconstant SO_DONTROUTE 5)

(cl:defconstant SO_BROADCAST 6)

(cl:defconstant SO_SNDBUF 7)

(cl:defconstant SO_RCVBUF 8)

(cl:defconstant SO_SNDBUFFORCE 32)

(cl:defconstant SO_RCVBUFFORCE 33)

(cl:defconstant SO_KEEPALIVE 9)

(cl:defconstant SO_OOBINLINE 10)

(cl:defconstant SO_NO_CHECK 11)

(cl:defconstant SO_PRIORITY 12)

(cl:defconstant SO_LINGER 13)

(cl:defconstant SO_BSDCOMPAT 14)

(cl:defconstant SO_REUSEPORT 15)

(cl:defconstant SO_PASSCRED 16)

(cl:defconstant SO_PEERCRED 17)

(cl:defconstant SO_RCVLOWAT 18)

(cl:defconstant SO_SNDLOWAT 19)

(cl:defconstant SO_RCVTIMEO 20)

(cl:defconstant SO_SNDTIMEO 21)

(cl:defconstant SO_SECURITY_AUTHENTICATION 22)

(cl:defconstant SO_SECURITY_ENCRYPTION_TRANSPORT 23)

(cl:defconstant SO_SECURITY_ENCRYPTION_NETWORK 24)

(cl:defconstant SO_BINDTODEVICE 25)

(cl:defconstant SO_ATTACH_FILTER 26)

(cl:defconstant SO_DETACH_FILTER 27)

(cl:defconstant SO_GET_FILTER 26)

(cl:defconstant SO_PEERNAME 28)

(cl:defconstant SO_TIMESTAMP 29)

(cl:defconstant SCM_TIMESTAMP 29)

(cl:defconstant SO_ACCEPTCONN 30)

(cl:defconstant SO_PEERSEC 31)

(cl:defconstant SO_PASSSEC 34)

(cl:defconstant SO_TIMESTAMPNS 35)

(cl:defconstant SCM_TIMESTAMPNS 35)

(cl:defconstant SO_MARK 36)

(cl:defconstant SO_TIMESTAMPING 37)

(cl:defconstant SCM_TIMESTAMPING 37)

(cl:defconstant SO_PROTOCOL 38)

(cl:defconstant SO_DOMAIN 39)

(cl:defconstant SO_RXQ_OVFL 40)

(cl:defconstant SO_WIFI_STATUS 41)

(cl:defconstant SCM_WIFI_STATUS 41)

(cl:defconstant SO_PEEK_OFF 42)

(cl:defconstant SO_NOFCS 43)

(cl:defconstant SO_LOCK_FILTER 44)

(cl:defconstant SO_SELECT_ERR_QUEUE 45)

(cl:defconstant SO_BUSY_POLL 46)

(cl:defconstant SO_MAX_PACING_RATE 47)

(cl:defconstant SO_BPF_EXTENSIONS 48)

(cffi:defcstruct linger
	(l_onoff :int)
	(l_linger :int))

(cffi:defcstruct osockaddr
	(sa_family :unsigned-short)
	(sa_data :pointer))

(defanonenum 
	(SHUT_RD #.0)
	SHUT_WR
	SHUT_RDWR)

(cffi:defcfun ("socket" socket) :int
  (__domain :int)
  (__type :int)
  (__protocol :int))

(cffi:defcfun ("socketpair" socketpair) :int
  (__domain :int)
  (__type :int)
  (__protocol :int)
  (__fds :pointer))

(cffi:defcfun ("bind" bind) :int
  (__fd :int)
  (__addr :pointer)
  (__len :unsigned-int))

(cffi:defcfun ("getsockname" getsockname) :int
  (__fd :int)
  (__addr :pointer)
  (__len :pointer))

(cffi:defcfun ("connect" connect) :int
  (__fd :int)
  (__addr :pointer)
  (__len :unsigned-int))

(cffi:defcfun ("getpeername" getpeername) :int
  (__fd :int)
  (__addr :pointer)
  (__len :pointer))

(cffi:defcfun ("send" send) :int
  (__fd :int)
  (__buf :pointer)
  (__n :unsigned-long)
  (__flags :int))

(cffi:defcfun ("recv" recv) :int
  (__fd :int)
  (__buf :pointer)
  (__n :unsigned-long)
  (__flags :int))

(cffi:defcfun ("sendto" sendto) :int
  (__fd :int)
  (__buf :pointer)
  (__n :unsigned-long)
  (__flags :int)
  (__addr :pointer)
  (__addr_len :unsigned-int))

(cffi:defcfun ("recvfrom" recvfrom) :int
  (__fd :int)
  (__buf :pointer)
  (__n :unsigned-long)
  (__flags :int)
  (__addr :pointer)
  (__addr_len :pointer))

(cffi:defcfun ("sendmsg" sendmsg) :int
  (__fd :int)
  (__message :pointer)
  (__flags :int))

(cffi:defcfun ("recvmsg" recvmsg) :int
  (__fd :int)
  (__message :pointer)
  (__flags :int))

(cffi:defcfun ("getsockopt" getsockopt) :int
  (__fd :int)
  (__level :int)
  (__optname :int)
  (__optval :pointer)
  (__optlen :pointer))

(cffi:defcfun ("setsockopt" setsockopt) :int
  (__fd :int)
  (__level :int)
  (__optname :int)
  (__optval :pointer)
  (__optlen :unsigned-int))

(cffi:defcfun ("listen" listen) :int
  (__fd :int)
  (__n :int))

(cffi:defcfun ("accept" accept) :int
  (__fd :int)
  (__addr :pointer)
  (__addr_len :pointer))

(cffi:defcfun ("shutdown" shutdown) :int
  (__fd :int)
  (__how :int))

(cffi:defcfun ("sockatmark" sockatmark) :int
  (__fd :int))

(cffi:defcfun ("isfdtype" isfdtype) :int
  (__fd :int)
  (__fdtype :int))

(cffi:defcstruct in_addr
	(s_addr :unsigned-int))

(cl:defconstant IP_OPTIONS 4)

(cl:defconstant IP_HDRINCL 3)

(cl:defconstant IP_TOS 1)

(cl:defconstant IP_TTL 2)

(cl:defconstant IP_RECVOPTS 6)

(cl:defconstant IP_RETOPTS 7)

(cl:defconstant IP_MULTICAST_IF 32)

(cl:defconstant IP_MULTICAST_TTL 33)

(cl:defconstant IP_MULTICAST_LOOP 34)

(cl:defconstant IP_ADD_MEMBERSHIP 35)

(cl:defconstant IP_DROP_MEMBERSHIP 36)

(cl:defconstant IP_UNBLOCK_SOURCE 37)

(cl:defconstant IP_BLOCK_SOURCE 38)

(cl:defconstant IP_ADD_SOURCE_MEMBERSHIP 39)

(cl:defconstant IP_DROP_SOURCE_MEMBERSHIP 40)

(cl:defconstant IP_MSFILTER 41)

(cl:defconstant MCAST_JOIN_GROUP 42)

(cl:defconstant MCAST_BLOCK_SOURCE 43)

(cl:defconstant MCAST_UNBLOCK_SOURCE 44)

(cl:defconstant MCAST_LEAVE_GROUP 45)

(cl:defconstant MCAST_JOIN_SOURCE_GROUP 46)

(cl:defconstant MCAST_LEAVE_SOURCE_GROUP 47)

(cl:defconstant MCAST_MSFILTER 48)

(cl:defconstant IP_MULTICAST_ALL 49)

(cl:defconstant IP_UNICAST_IF 50)

(cl:defconstant MCAST_EXCLUDE 0)

(cl:defconstant MCAST_INCLUDE 1)

(cl:defconstant IP_ROUTER_ALERT 5)

(cl:defconstant IP_PKTINFO 8)

(cl:defconstant IP_PKTOPTIONS 9)

(cl:defconstant IP_PMTUDISC 10)

(cl:defconstant IP_MTU_DISCOVER 10)

(cl:defconstant IP_RECVERR 11)

(cl:defconstant IP_RECVTTL 12)

(cl:defconstant IP_RECVTOS 13)

(cl:defconstant IP_MTU 14)

(cl:defconstant IP_FREEBIND 15)

(cl:defconstant IP_IPSEC_POLICY 16)

(cl:defconstant IP_XFRM_POLICY 17)

(cl:defconstant IP_PASSSEC 18)

(cl:defconstant IP_TRANSPARENT 19)

(cl:defconstant IP_ORIGDSTADDR 20)

(cl:defconstant IP_RECVORIGDSTADDR 20)

(cl:defconstant IP_MINTTL 21)

(cl:defconstant IP_PMTUDISC_DONT 0)

(cl:defconstant IP_PMTUDISC_WANT 1)

(cl:defconstant IP_PMTUDISC_DO 2)

(cl:defconstant IP_PMTUDISC_PROBE 3)

(cl:defconstant SOL_IP 0)

(cl:defconstant IP_DEFAULT_MULTICAST_TTL 1)

(cl:defconstant IP_DEFAULT_MULTICAST_LOOP 1)

(cl:defconstant IP_MAX_MEMBERSHIPS 20)

(cffi:defcstruct ip_opts
	(ip_dst in_addr)
	(ip_opts :pointer))

(cffi:defcstruct ip_mreqn
	(imr_multiaddr in_addr)
	(imr_address in_addr)
	(imr_ifindex :int))

(cffi:defcstruct in_pktinfo
	(ipi_ifindex :int)
	(ipi_spec_dst in_addr)
	(ipi_addr in_addr))

(cl:defconstant IPV6_ADDRFORM 1)

(cl:defconstant IPV6_2292PKTINFO 2)

(cl:defconstant IPV6_2292HOPOPTS 3)

(cl:defconstant IPV6_2292DSTOPTS 4)

(cl:defconstant IPV6_2292RTHDR 5)

(cl:defconstant IPV6_2292PKTOPTIONS 6)

(cl:defconstant IPV6_CHECKSUM 7)

(cl:defconstant IPV6_2292HOPLIMIT 8)

(cl:defconstant IPV6_NEXTHOP 9)

(cl:defconstant IPV6_AUTHHDR 10)

(cl:defconstant IPV6_UNICAST_HOPS 16)

(cl:defconstant IPV6_MULTICAST_IF 17)

(cl:defconstant IPV6_MULTICAST_HOPS 18)

(cl:defconstant IPV6_MULTICAST_LOOP 19)

(cl:defconstant IPV6_JOIN_GROUP 20)

(cl:defconstant IPV6_LEAVE_GROUP 21)

(cl:defconstant IPV6_ROUTER_ALERT 22)

(cl:defconstant IPV6_MTU_DISCOVER 23)

(cl:defconstant IPV6_MTU 24)

(cl:defconstant IPV6_RECVERR 25)

(cl:defconstant IPV6_V6ONLY 26)

(cl:defconstant IPV6_JOIN_ANYCAST 27)

(cl:defconstant IPV6_LEAVE_ANYCAST 28)

(cl:defconstant IPV6_IPSEC_POLICY 34)

(cl:defconstant IPV6_XFRM_POLICY 35)

(cl:defconstant IPV6_RECVPKTINFO 49)

(cl:defconstant IPV6_PKTINFO 50)

(cl:defconstant IPV6_RECVHOPLIMIT 51)

(cl:defconstant IPV6_HOPLIMIT 52)

(cl:defconstant IPV6_RECVHOPOPTS 53)

(cl:defconstant IPV6_HOPOPTS 54)

(cl:defconstant IPV6_RTHDRDSTOPTS 55)

(cl:defconstant IPV6_RECVRTHDR 56)

(cl:defconstant IPV6_RTHDR 57)

(cl:defconstant IPV6_RECVDSTOPTS 58)

(cl:defconstant IPV6_DSTOPTS 59)

(cl:defconstant IPV6_RECVTCLASS 66)

(cl:defconstant IPV6_TCLASS 67)

(cl:defconstant IPV6_ADD_MEMBERSHIP 20)

(cl:defconstant IPV6_DROP_MEMBERSHIP 21)

(cl:defconstant IPV6_RXHOPOPTS 54)

(cl:defconstant IPV6_RXDSTOPTS 59)

(cl:defconstant IPV6_PMTUDISC_DONT 0)

(cl:defconstant IPV6_PMTUDISC_WANT 1)

(cl:defconstant IPV6_PMTUDISC_DO 2)

(cl:defconstant IPV6_PMTUDISC_PROBE 3)

(cl:defconstant SOL_IPV6 41)

(cl:defconstant SOL_ICMPV6 58)

(cl:defconstant IPV6_RTHDR_LOOSE 0)

(cl:defconstant IPV6_RTHDR_STRICT 1)

(cl:defconstant IPV6_RTHDR_TYPE_0 0)

(defanonenum 
	(IPPROTO_IP #.0)
	(IPPROTO_ICMP #.1)
	(IPPROTO_IGMP #.2)
	(IPPROTO_IPIP #.4)
	(IPPROTO_TCP #.6)
	(IPPROTO_EGP #.8)
	(IPPROTO_PUP #.12)
	(IPPROTO_UDP #.17)
	(IPPROTO_IDP #.22)
	(IPPROTO_TP #.29)
	(IPPROTO_DCCP #.33)
	(IPPROTO_IPV6 #.41)
	(IPPROTO_RSVP #.46)
	(IPPROTO_GRE #.47)
	(IPPROTO_ESP #.50)
	(IPPROTO_AH #.51)
	(IPPROTO_MTP #.92)
	(IPPROTO_BEETPH #.94)
	(IPPROTO_ENCAP #.98)
	(IPPROTO_PIM #.103)
	(IPPROTO_COMP #.108)
	(IPPROTO_SCTP #.132)
	(IPPROTO_UDPLITE #.136)
	(IPPROTO_RAW #.255)
	IPPROTO_MAX)

(defanonenum 
	(IPPROTO_HOPOPTS #.0)
	(IPPROTO_ROUTING #.43)
	(IPPROTO_FRAGMENT #.44)
	(IPPROTO_ICMPV6 #.58)
	(IPPROTO_NONE #.59)
	(IPPROTO_DSTOPTS #.60)
	(IPPROTO_MH #.135))

(defanonenum 
	(IPPORT_ECHO #.7)
	(IPPORT_DISCARD #.9)
	(IPPORT_SYSTAT #.11)
	(IPPORT_DAYTIME #.13)
	(IPPORT_NETSTAT #.15)
	(IPPORT_FTP #.21)
	(IPPORT_TELNET #.23)
	(IPPORT_SMTP #.25)
	(IPPORT_TIMESERVER #.37)
	(IPPORT_NAMESERVER #.42)
	(IPPORT_WHOIS #.43)
	(IPPORT_MTP #.57)
	(IPPORT_TFTP #.69)
	(IPPORT_RJE #.77)
	(IPPORT_FINGER #.79)
	(IPPORT_TTYLINK #.87)
	(IPPORT_SUPDUP #.95)
	(IPPORT_EXECSERVER #.512)
	(IPPORT_LOGINSERVER #.513)
	(IPPORT_CMDSERVER #.514)
	(IPPORT_EFSSERVER #.520)
	(IPPORT_BIFFUDP #.512)
	(IPPORT_WHOSERVER #.513)
	(IPPORT_ROUTESERVER #.520)
	(IPPORT_RESERVED #.1024)
	(IPPORT_USERRESERVED #.5000))

(cl:defconstant IN_CLASSA_NET #xff000000)

(cl:defconstant IN_CLASSA_NSHIFT 24)

(cl:defconstant IN_CLASSA_MAX 128)

(cl:defconstant IN_CLASSB_NET #xffff0000)

(cl:defconstant IN_CLASSB_NSHIFT 16)


(cl:defconstant IN_CLASSB_MAX 65536)

(cl:defconstant IN_CLASSC_NET #xffffff00)

(cl:defconstant IN_CLASSC_NSHIFT 8)


(cl:defconstant IN_LOOPBACKNET 127)

(cffi:defcstruct in6_addr
	(__in6_u :pointer))

(cffi:defcunion in6_addr___in6_u
	(__u6_addr8 :pointer)
	(__u6_addr16 :pointer)
	(__u6_addr32 :pointer))

(cffi:defcvar ("in6addr_any" in6addr_any)
 in6_addr)

(cffi:defcvar ("in6addr_loopback" in6addr_loopback)
 in6_addr)

(cl:defconstant INET_ADDRSTRLEN 16)

(cl:defconstant INET6_ADDRSTRLEN 46)

(cffi:defcstruct sockaddr_in
	(sin_family :unsigned-short)
	(sin_port :unsigned-short)
	(sin_addr in_addr)
	(sin_zero :pointer))

(cffi:defcstruct sockaddr_in6
	(sin6_family :unsigned-short)
	(sin6_port :unsigned-short)
	(sin6_flowinfo :unsigned-int)
	(sin6_addr in6_addr)
	(sin6_scope_id :unsigned-int))

(cffi:defcstruct ip_mreq
	(imr_multiaddr in_addr)
	(imr_interface in_addr))

(cffi:defcstruct ip_mreq_source
	(imr_multiaddr in_addr)
	(imr_interface in_addr)
	(imr_sourceaddr in_addr))

(cffi:defcstruct ipv6_mreq
	(ipv6mr_multiaddr in6_addr)
	(ipv6mr_interface :unsigned-int))

(cffi:defcstruct group_req
	(gr_interface :unsigned-int)
	(gr_group sockaddr_storage))

(cffi:defcstruct group_source_req
	(gsr_interface :unsigned-int)
	(gsr_group sockaddr_storage)
	(gsr_source sockaddr_storage))

(cffi:defcstruct ip_msfilter
	(imsf_multiaddr in_addr)
	(imsf_interface in_addr)
	(imsf_fmode :unsigned-int)
	(imsf_numsrc :unsigned-int)
	(imsf_slist :pointer))

(cffi:defcstruct group_filter
	(gf_interface :unsigned-int)
	(gf_group sockaddr_storage)
	(gf_fmode :unsigned-int)
	(gf_numsrc :unsigned-int)
	(gf_slist :pointer))

(cffi:defcfun ("ntohl" ntohl) :unsigned-int
  (__netlong :unsigned-int))

(cffi:defcfun ("ntohs" ntohs) :unsigned-short
  (__netshort :unsigned-short))

(cffi:defcfun ("htonl" htonl) :unsigned-int
  (__hostlong :unsigned-int))

(cffi:defcfun ("htons" htons) :unsigned-short
  (__hostshort :unsigned-short))

(cffi:defcfun ("bindresvport" bindresvport) :int
  (__sockfd :int)
  (__sock_in :pointer))

(cffi:defcfun ("bindresvport6" bindresvport6) :int
  (__sockfd :int)
  (__sock_in :pointer))

(cl:defconstant _ARPA_INET_H 1)

(cffi:defcfun ("inet_addr" inet_addr) :unsigned-int
  (__cp :string))

(cffi:defcfun ("inet_lnaof" inet_lnaof) :unsigned-int
  (__in in_addr))

(cffi:defcfun ("inet_makeaddr" inet_makeaddr) in_addr
  (__net :unsigned-int)
  (__host :unsigned-int))

(cffi:defcfun ("inet_netof" inet_netof) :unsigned-int
  (__in in_addr))

(cffi:defcfun ("inet_network" inet_network) :unsigned-int
  (__cp :string))

(cffi:defcfun ("inet_ntoa" inet_ntoa) :string
  (__in in_addr))

(cffi:defcfun ("inet_pton" inet_pton) :int
  (__af :int)
  (__cp :string)
  (__buf :pointer))

(cffi:defcfun ("inet_ntop" inet_ntop) :string
  (__af :int)
  (__cp :pointer)
  (__buf :string)
  (__len :unsigned-int))

(cffi:defcfun ("inet_aton" inet_aton) :int
  (__cp :string)
  (__inp :pointer))

(cffi:defcfun ("inet_neta" inet_neta) :string
  (__net :unsigned-int)
  (__buf :string)
  (__len :unsigned-long))

(cffi:defcfun ("inet_net_ntop" inet_net_ntop) :string
  (__af :int)
  (__cp :pointer)
  (__bits :int)
  (__buf :string)
  (__len :unsigned-long))

(cffi:defcfun ("inet_net_pton" inet_net_pton) :int
  (__af :int)
  (__cp :string)
  (__buf :pointer)
  (__len :unsigned-long))

(cffi:defcfun ("inet_nsap_addr" inet_nsap_addr) :unsigned-int
  (__cp :string)
  (__buf :pointer)
  (__len :int))

(cffi:defcfun ("inet_nsap_ntoa" inet_nsap_ntoa) :string
  (__len :int)
  (__cp :pointer)
  (__buf :string))

(cl:defconstant _UNISTD_H 1)

(cl:defconstant _POSIX_VERSION 200809)

(cl:defconstant __POSIX2_THIS_VERSION 200809)

(cl:defconstant _POSIX2_VERSION 200809)

(cl:defconstant _POSIX2_C_BIND 200809)

(cl:defconstant _POSIX2_C_DEV 200809)

(cl:defconstant _POSIX2_SW_DEV 200809)

(cl:defconstant _POSIX2_LOCALEDEF 200809)

(cl:defconstant _XOPEN_VERSION 700)

(cl:defconstant _XOPEN_XCU_VERSION 4)

(cl:defconstant _XOPEN_XPG2 1)

(cl:defconstant _XOPEN_XPG3 1)

(cl:defconstant _XOPEN_XPG4 1)

(cl:defconstant _XOPEN_UNIX 1)

(cl:defconstant _XOPEN_CRYPT 1)

(cl:defconstant _XOPEN_ENH_I18N 1)

(cl:defconstant _XOPEN_LEGACY 1)

(cl:defconstant _BITS_POSIX_OPT_H 1)

(cl:defconstant _POSIX_JOB_CONTROL 1)

(cl:defconstant _POSIX_SAVED_IDS 1)

(cl:defconstant _POSIX_PRIORITY_SCHEDULING 200809)

(cl:defconstant _POSIX_SYNCHRONIZED_IO 200809)

(cl:defconstant _POSIX_FSYNC 200809)

(cl:defconstant _POSIX_MAPPED_FILES 200809)

(cl:defconstant _POSIX_MEMLOCK 200809)

(cl:defconstant _POSIX_MEMLOCK_RANGE 200809)

(cl:defconstant _POSIX_MEMORY_PROTECTION 200809)

(cl:defconstant _POSIX_CHOWN_RESTRICTED 0)

(cl:defconstant _POSIX_VDISABLE #\\)

(cl:defconstant _POSIX_NO_TRUNC 1)

(cl:defconstant _XOPEN_REALTIME 1)

(cl:defconstant _XOPEN_REALTIME_THREADS 1)

(cl:defconstant _XOPEN_SHM 1)

(cl:defconstant _POSIX_THREADS 200809)

(cl:defconstant _POSIX_REENTRANT_FUNCTIONS 1)

(cl:defconstant _POSIX_THREAD_SAFE_FUNCTIONS 200809)

(cl:defconstant _POSIX_THREAD_PRIORITY_SCHEDULING 200809)

(cl:defconstant _POSIX_THREAD_ATTR_STACKSIZE 200809)

(cl:defconstant _POSIX_THREAD_ATTR_STACKADDR 200809)

(cl:defconstant _POSIX_THREAD_PRIO_INHERIT 200809)

(cl:defconstant _POSIX_THREAD_PRIO_PROTECT 200809)

(cl:defconstant _POSIX_THREAD_ROBUST_PRIO_INHERIT 200809)

(cl:defconstant _POSIX_THREAD_ROBUST_PRIO_PROTECT -1)

(cl:defconstant _POSIX_SEMAPHORES 200809)

(cl:defconstant _POSIX_REALTIME_SIGNALS 200809)

(cl:defconstant _POSIX_ASYNCHRONOUS_IO 200809)

(cl:defconstant _POSIX_ASYNC_IO 1)

(cl:defconstant _LFS_ASYNCHRONOUS_IO 1)

(cl:defconstant _POSIX_PRIORITIZED_IO 200809)

(cl:defconstant _LFS64_ASYNCHRONOUS_IO 1)

(cl:defconstant _LFS_LARGEFILE 1)

(cl:defconstant _LFS64_LARGEFILE 1)

(cl:defconstant _LFS64_STDIO 1)

(cl:defconstant _POSIX_SHARED_MEMORY_OBJECTS 200809)

(cl:defconstant _POSIX_CPUTIME 0)

(cl:defconstant _POSIX_THREAD_CPUTIME 0)

(cl:defconstant _POSIX_REGEXP 1)

(cl:defconstant _POSIX_READER_WRITER_LOCKS 200809)

(cl:defconstant _POSIX_SHELL 1)

(cl:defconstant _POSIX_TIMEOUTS 200809)

(cl:defconstant _POSIX_SPIN_LOCKS 200809)

(cl:defconstant _POSIX_SPAWN 200809)

(cl:defconstant _POSIX_TIMERS 200809)

(cl:defconstant _POSIX_BARRIERS 200809)

(cl:defconstant _POSIX_MESSAGE_PASSING 200809)

(cl:defconstant _POSIX_THREAD_PROCESS_SHARED 200809)

(cl:defconstant _POSIX_MONOTONIC_CLOCK 0)

(cl:defconstant _POSIX_CLOCK_SELECTION 200809)

(cl:defconstant _POSIX_ADVISORY_INFO 200809)

(cl:defconstant _POSIX_IPV6 200809)

(cl:defconstant _POSIX_RAW_SOCKETS 200809)

(cl:defconstant _POSIX2_CHAR_TERM 200809)

(cl:defconstant _POSIX_SPORADIC_SERVER -1)

(cl:defconstant _POSIX_THREAD_SPORADIC_SERVER -1)

(cl:defconstant _POSIX_TRACE -1)

(cl:defconstant _POSIX_TRACE_EVENT_FILTER -1)

(cl:defconstant _POSIX_TRACE_INHERIT -1)

(cl:defconstant _POSIX_TRACE_LOG -1)

(cl:defconstant _POSIX_TYPED_MEMORY_OBJECTS -1)

(cl:defconstant _POSIX_V7_ILP32_OFFBIG 1)

(cl:defconstant _POSIX_V6_ILP32_OFFBIG 1)

(cl:defconstant _XBS5_ILP32_OFFBIG 1)

(cl:defconstant _POSIX_V7_ILP32_OFF32 1)

(cl:defconstant _POSIX_V6_ILP32_OFF32 1)

(cl:defconstant _XBS5_ILP32_OFF32 1)

(cl:defconstant __ILP32_OFF32_CFLAGS "-m32")

(cl:defconstant __ILP32_OFF32_LDFLAGS "-m32")

(cl:defconstant __ILP32_OFFBIG_CFLAGS "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64")

(cl:defconstant __ILP32_OFFBIG_LDFLAGS "-m32")

(cl:defconstant __LP64_OFF64_CFLAGS "-m64")

(cl:defconstant __LP64_OFF64_LDFLAGS "-m64")

(cl:defconstant STDIN_FILENO 0)

(cl:defconstant STDOUT_FILENO 1)

(cl:defconstant STDERR_FILENO 2)

(cl:defconstant R_OK 4)

(cl:defconstant W_OK 2)

(cl:defconstant X_OK 1)

(cl:defconstant F_OK 0)

(cffi:defcfun ("access" access) :int
  (__name :string)
  (__type :int))

(cffi:defcfun ("faccessat" faccessat) :int
  (__fd :int)
  (__file :string)
  (__type :int)
  (__flag :int))

(cl:defconstant SEEK_SET 0)

(cl:defconstant SEEK_CUR 1)

(cl:defconstant SEEK_END 2)

(cl:defconstant L_SET 0)

(cl:defconstant L_INCR 1)

(cl:defconstant L_XTND 2)

(cffi:defcfun ("lseek" lseek) :long
  (__fd :int)
  (__offset :long)
  (__whence :int))

(cffi:defcfun ("close" close) :int
  (__fd :int))

(cffi:defcfun ("read" read) :int
  (__fd :int)
  (__buf :pointer)
  (__nbytes :unsigned-long))

(cffi:defcfun ("write" write) :int
  (__fd :int)
  (__buf :pointer)
  (__n :unsigned-long))

(cffi:defcfun ("pread" pread) :int
  (__fd :int)
  (__buf :pointer)
  (__nbytes :unsigned-long)
  (__offset :long))

(cffi:defcfun ("pwrite" pwrite) :int
  (__fd :int)
  (__buf :pointer)
  (__n :unsigned-long)
  (__offset :long))

(cffi:defcfun ("pipe" pipe) :int
  (__pipedes :pointer))

(cffi:defcfun ("alarm" alarm) :unsigned-int
  (__seconds :unsigned-int))

(cffi:defcfun ("sleep" sleep) :unsigned-int
  (__seconds :unsigned-int))

(cffi:defcfun ("ualarm" ualarm) :unsigned-int
  (__value :unsigned-int)
  (__interval :unsigned-int))

(cffi:defcfun ("usleep" usleep) :int
  (__useconds :unsigned-int))

(cffi:defcfun ("pause" pause) :int)

(cffi:defcfun ("chown" chown) :int
  (__file :string)
  (__owner :unsigned-int)
  (__group :unsigned-int))

(cffi:defcfun ("fchown" fchown) :int
  (__fd :int)
  (__owner :unsigned-int)
  (__group :unsigned-int))

(cffi:defcfun ("lchown" lchown) :int
  (__file :string)
  (__owner :unsigned-int)
  (__group :unsigned-int))

(cffi:defcfun ("fchownat" fchownat) :int
  (__fd :int)
  (__file :string)
  (__owner :unsigned-int)
  (__group :unsigned-int)
  (__flag :int))

(cffi:defcfun ("chdir" chdir) :int
  (__path :string))

(cffi:defcfun ("fchdir" fchdir) :int
  (__fd :int))

(cffi:defcfun ("getcwd" getcwd) :string
  (__buf :string)
  (__size :unsigned-long))

(cffi:defcfun ("getwd" getwd) :string
  (__buf :string))

(cffi:defcfun ("dup" dup) :int
  (__fd :int))

(cffi:defcfun ("dup2" dup2) :int
  (__fd :int)
  (__fd2 :int))

(cffi:defcvar ("__environ" __environ)
 :pointer)

(cffi:defcfun ("execve" execve) :int
  (__path :string)
  (__argv :pointer)
  (__envp :pointer))

(cffi:defcfun ("fexecve" fexecve) :int
  (__fd :int)
  (__argv :pointer)
  (__envp :pointer))

(cffi:defcfun ("execv" execv) :int
  (__path :string)
  (__argv :pointer))

(cffi:defcfun ("execle" execle) :int
  (__path :string)
  (__arg :string)
  cl:&rest)

(cffi:defcfun ("execl" execl) :int
  (__path :string)
  (__arg :string)
  cl:&rest)

(cffi:defcfun ("execvp" execvp) :int
  (__file :string)
  (__argv :pointer))

(cffi:defcfun ("execlp" execlp) :int
  (__file :string)
  (__arg :string)
  cl:&rest)

(cffi:defcfun ("nice" nice) :int
  (__inc :int))

(cffi:defcfun ("_exit" _exit) :void
  (__status :int))

(defanonenum 
	_PC_LINK_MAX
	_PC_MAX_CANON
	_PC_MAX_INPUT
	_PC_NAME_MAX
	_PC_PATH_MAX
	_PC_PIPE_BUF
	_PC_CHOWN_RESTRICTED
	_PC_NO_TRUNC
	_PC_VDISABLE
	_PC_SYNC_IO
	_PC_ASYNC_IO
	_PC_PRIO_IO
	_PC_SOCK_MAXBUF
	_PC_FILESIZEBITS
	_PC_REC_INCR_XFER_SIZE
	_PC_REC_MAX_XFER_SIZE
	_PC_REC_MIN_XFER_SIZE
	_PC_REC_XFER_ALIGN
	_PC_ALLOC_SIZE_MIN
	_PC_SYMLINK_MAX
	_PC_2_SYMLINKS)

(cffi:defcfun ("pathconf" pathconf) :long
  (__path :string)
  (__name :int))

(cffi:defcfun ("fpathconf" fpathconf) :long
  (__fd :int)
  (__name :int))

(cffi:defcfun ("sysconf" sysconf) :long
  (__name :int))

(cffi:defcfun ("confstr" confstr) :unsigned-long
  (__name :int)
  (__buf :string)
  (__len :unsigned-long))

(cffi:defcfun ("getpid" getpid) :int)

(cffi:defcfun ("getppid" getppid) :int)

(cffi:defcfun ("getpgrp" getpgrp) :int)

(cffi:defcfun ("__getpgid" __getpgid) :int
  (__pid :int))

(cffi:defcfun ("getpgid" getpgid) :int
  (__pid :int))

(cffi:defcfun ("setpgid" setpgid) :int
  (__pid :int)
  (__pgid :int))

(cffi:defcfun ("setpgrp" setpgrp) :int)

(cffi:defcfun ("setsid" setsid) :int)

(cffi:defcfun ("getsid" getsid) :int
  (__pid :int))

(cffi:defcfun ("getuid" getuid) :unsigned-int)

(cffi:defcfun ("geteuid" geteuid) :unsigned-int)

(cffi:defcfun ("getgid" getgid) :unsigned-int)

(cffi:defcfun ("getegid" getegid) :unsigned-int)

(cffi:defcfun ("getgroups" getgroups) :int
  (__size :int)
  (__list :pointer))

(cffi:defcfun ("setuid" setuid) :int
  (__uid :unsigned-int))

(cffi:defcfun ("setreuid" setreuid) :int
  (__ruid :unsigned-int)
  (__euid :unsigned-int))

(cffi:defcfun ("seteuid" seteuid) :int
  (__uid :unsigned-int))

(cffi:defcfun ("setgid" setgid) :int
  (__gid :unsigned-int))

(cffi:defcfun ("setregid" setregid) :int
  (__rgid :unsigned-int)
  (__egid :unsigned-int))

(cffi:defcfun ("setegid" setegid) :int
  (__gid :unsigned-int))

(cffi:defcfun ("fork" fork) :int)

(cffi:defcfun ("vfork" vfork) :int)

(cffi:defcfun ("ttyname" ttyname) :string
  (__fd :int))

(cffi:defcfun ("ttyname_r" ttyname_r) :int
  (__fd :int)
  (__buf :string)
  (__buflen :unsigned-long))

(cffi:defcfun ("isatty" isatty) :int
  (__fd :int))

(cffi:defcfun ("ttyslot" ttyslot) :int)

(cffi:defcfun ("link" link) :int
  (__from :string)
  (__to :string))

(cffi:defcfun ("linkat" linkat) :int
  (__fromfd :int)
  (__from :string)
  (__tofd :int)
  (__to :string)
  (__flags :int))

(cffi:defcfun ("symlink" symlink) :int
  (__from :string)
  (__to :string))

(cffi:defcfun ("readlink" readlink) :int
  (__path :string)
  (__buf :string)
  (__len :unsigned-long))

(cffi:defcfun ("symlinkat" symlinkat) :int
  (__from :string)
  (__tofd :int)
  (__to :string))

(cffi:defcfun ("readlinkat" readlinkat) :int
  (__fd :int)
  (__path :string)
  (__buf :string)
  (__len :unsigned-long))

(cffi:defcfun ("unlink" unlink) :int
  (__name :string))

(cffi:defcfun ("unlinkat" unlinkat) :int
  (__fd :int)
  (__name :string)
  (__flag :int))

(cffi:defcfun ("rmdir" rmdir) :int
  (__path :string))

(cffi:defcfun ("tcgetpgrp" tcgetpgrp) :int
  (__fd :int))

(cffi:defcfun ("tcsetpgrp" tcsetpgrp) :int
  (__fd :int)
  (__pgrp_id :int))

(cffi:defcfun ("getlogin" getlogin) :string)

(cffi:defcfun ("getlogin_r" getlogin_r) :int
  (__name :string)
  (__name_len :unsigned-long))

(cffi:defcfun ("setlogin" setlogin) :int
  (__name :string))

(cffi:defcvar ("optarg" optarg)
 :string)

(cffi:defcvar ("optind" optind)
 :int)

(cffi:defcvar ("opterr" opterr)
 :int)

(cffi:defcvar ("optopt" optopt)
 :int)

(cffi:defcfun ("getopt" getopt) :int
  (___argc :int)
  (___argv :pointer)
  (__shortopts :string))

(cffi:defcfun ("gethostname" gethostname) :int
  (__name :string)
  (__len :unsigned-long))

(cffi:defcfun ("sethostname" sethostname) :int
  (__name :string)
  (__len :unsigned-long))

(cffi:defcfun ("sethostid" sethostid) :int
  (__id :long))

(cffi:defcfun ("getdomainname" getdomainname) :int
  (__name :string)
  (__len :unsigned-long))

(cffi:defcfun ("setdomainname" setdomainname) :int
  (__name :string)
  (__len :unsigned-long))

(cffi:defcfun ("vhangup" vhangup) :int)

(cffi:defcfun ("revoke" revoke) :int
  (__file :string))

(cffi:defcfun ("profil" profil) :int
  (__sample_buffer :pointer)
  (__size :unsigned-long)
  (__offset :unsigned-long)
  (__scale :unsigned-int))

(cffi:defcfun ("acct" acct) :int
  (__name :string))

(cffi:defcfun ("getusershell" getusershell) :string)

(cffi:defcfun ("endusershell" endusershell) :void)

(cffi:defcfun ("setusershell" setusershell) :void)

(cffi:defcfun ("daemon" daemon) :int
  (__nochdir :int)
  (__noclose :int))

(cffi:defcfun ("chroot" chroot) :int
  (__path :string))

(cffi:defcfun ("getpass" getpass) :string
  (__prompt :string))

(cffi:defcfun ("fsync" fsync) :int
  (__fd :int))

(cffi:defcfun ("gethostid" gethostid) :long)

(cffi:defcfun ("sync" sync) :void)

(cffi:defcfun ("getpagesize" getpagesize) :int)

(cffi:defcfun ("getdtablesize" getdtablesize) :int)

(cffi:defcfun ("truncate" truncate) :int
  (__file :string)
  (__length :long))

(cffi:defcfun ("ftruncate" ftruncate) :int
  (__fd :int)
  (__length :long))

(cffi:defcfun ("brk" brk) :int
  (__addr :pointer))

(cffi:defcfun ("sbrk" sbrk) :pointer
  (__delta :int))

(cffi:defcfun ("syscall" syscall) :long
  (__sysno :long)
  cl:&rest)

(cl:defconstant F_ULOCK 0)

(cl:defconstant F_LOCK 1)

(cl:defconstant F_TLOCK 2)

(cl:defconstant F_TEST 3)

(cffi:defcfun ("lockf" lockf) :int
  (__fd :int)
  (__cmd :int)
  (__len :long))

(cffi:defcfun ("fdatasync" fdatasync) :int
  (__fildes :int))

(cl:defconstant _STDIO_H 1)

(cl:defconstant __FILE_defined 1)

(cl:defconstant ____FILE_defined 1)

(cl:defconstant _G_config_h 1)

(cl:defconstant ____mbstate_t_defined 1)

(cffi:defcstruct __mbstate_t
	(__count :int)
	(__value :pointer))

(cffi:defcunion __mbstate_t___value
	(__wch :unsigned-int)
	(__wchb :pointer))

(cffi:defcstruct _G_fpos_t
	(__pos :long)
	(__state __mbstate_t))

(cffi:defcstruct _G_fpos64_t
	(__pos :long-long)
	(__state __mbstate_t))

(cl:defconstant _G_HAVE_MMAP 1)

(cl:defconstant _G_HAVE_MREMAP 1)

(cl:defconstant _G_IO_IO_FILE_VERSION #x20001)

(cl:defconstant _G_BUFSIZ 8192)

(cl:defconstant _IO_BUFSIZ 8192)

(cl:defconstant _IO_UNIFIED_JUMPTABLES 1)

(cl:defconstant EOF -1)

(cl:defconstant _IOS_INPUT 1)

(cl:defconstant _IOS_OUTPUT 2)

(cl:defconstant _IOS_ATEND 4)

(cl:defconstant _IOS_APPEND 8)

(cl:defconstant _IOS_TRUNC 16)

(cl:defconstant _IOS_NOCREATE 32)

(cl:defconstant _IOS_NOREPLACE 64)

(cl:defconstant _IOS_BIN 128)

(cl:defconstant _IO_MAGIC #xFBAD0000)

(cl:defconstant _OLD_STDIO_MAGIC #xFABC0000)

(cl:defconstant _IO_MAGIC_MASK #xFFFF0000)

(cl:defconstant _IO_USER_BUF 1)

(cl:defconstant _IO_UNBUFFERED 2)

(cl:defconstant _IO_NO_READS 4)

(cl:defconstant _IO_NO_WRITES 8)

(cl:defconstant _IO_EOF_SEEN #x10)

(cl:defconstant _IO_ERR_SEEN #x20)

(cl:defconstant _IO_DELETE_DONT_CLOSE #x40)

(cl:defconstant _IO_LINKED #x80)

(cl:defconstant _IO_IN_BACKUP #x100)

(cl:defconstant _IO_LINE_BUF #x200)

(cl:defconstant _IO_TIED_PUT_GET #x400)

(cl:defconstant _IO_CURRENTLY_PUTTING #x800)

(cl:defconstant _IO_IS_APPENDING #x1000)

(cl:defconstant _IO_IS_FILEBUF #x2000)

(cl:defconstant _IO_BAD_SEEN #x4000)

(cl:defconstant _IO_USER_LOCK #x8000)

(cl:defconstant _IO_FLAGS2_MMAP 1)

(cl:defconstant _IO_FLAGS2_NOTCANCEL 2)

(cl:defconstant _IO_FLAGS2_USER_WBUF 8)

(cl:defconstant _IO_SKIPWS #o1)

(cl:defconstant _IO_LEFT #o2)

(cl:defconstant _IO_RIGHT #o4)

(cl:defconstant _IO_INTERNAL #o10)

(cl:defconstant _IO_DEC #o20)

(cl:defconstant _IO_OCT #o40)

(cl:defconstant _IO_HEX #o100)

(cl:defconstant _IO_SHOWBASE #o200)

(cl:defconstant _IO_SHOWPOINT #o400)

(cl:defconstant _IO_UPPERCASE #o1000)

(cl:defconstant _IO_SHOWPOS #o2000)

(cl:defconstant _IO_SCIENTIFIC #o4000)

(cl:defconstant _IO_FIXED #o10000)

(cl:defconstant _IO_UNITBUF #o20000)

(cl:defconstant _IO_STDIO #o40000)

(cl:defconstant _IO_DONT_CLOSE #o100000)

(cl:defconstant _IO_BOOLALPHA #o200000)

(cffi:defcstruct _IO_marker
	(_next :pointer)
	(_sbuf :pointer)
	(_pos :int))

(cffi:defcenum __codecvt_result
	:__codecvt_ok
	:__codecvt_partial
	:__codecvt_error
	:__codecvt_noconv)

(cffi:defcstruct _IO_FILE
	(_flags :int)
	(_IO_read_ptr :string)
	(_IO_read_end :string)
	(_IO_read_base :string)
	(_IO_write_base :string)
	(_IO_write_ptr :string)
	(_IO_write_end :string)
	(_IO_buf_base :string)
	(_IO_buf_end :string)
	(_IO_save_base :string)
	(_IO_backup_base :string)
	(_IO_save_end :string)
	(_markers :pointer)
	(_chain :pointer)
	(_fileno :int)
	(_flags2 :int)
	(_old_offset :long)
	(_cur_column :unsigned-short)
	(_vtable_offset :char)
	(_shortbuf :pointer)
	(_lock :pointer)
	(_offset :long-long)
	(__pad1 :pointer)
	(__pad2 :pointer)
	(__pad3 :pointer)
	(__pad4 :pointer)
	(__pad5 :unsigned-long)
	(_mode :int)
	(_unused2 :pointer))

(cffi:defcvar ("_IO_2_1_stdin_" _IO_2_1_stdin_)
 :pointer)

(cffi:defcvar ("_IO_2_1_stdout_" _IO_2_1_stdout_)
 :pointer)

(cffi:defcvar ("_IO_2_1_stderr_" _IO_2_1_stderr_)
 :pointer)

(cffi:defcfun ("__underflow" __underflow) :int
  (arg0 :pointer))

(cffi:defcfun ("__uflow" __uflow) :int
  (arg0 :pointer))

(cffi:defcfun ("__overflow" __overflow) :int
  (arg0 :pointer)
  (arg1 :int))

(cffi:defcfun ("_IO_getc" _IO_getc) :int
  (__fp :pointer))

(cffi:defcfun ("_IO_putc" _IO_putc) :int
  (__c :int)
  (__fp :pointer))

(cffi:defcfun ("_IO_feof" _IO_feof) :int
  (__fp :pointer))

(cffi:defcfun ("_IO_ferror" _IO_ferror) :int
  (__fp :pointer))

(cffi:defcfun ("_IO_peekc_locked" _IO_peekc_locked) :int
  (__fp :pointer))

(cffi:defcfun ("_IO_flockfile" _IO_flockfile) :void
  (arg0 :pointer))

(cffi:defcfun ("_IO_funlockfile" _IO_funlockfile) :void
  (arg0 :pointer))

(cffi:defcfun ("_IO_ftrylockfile" _IO_ftrylockfile) :int
  (arg0 :pointer))

(cffi:defcfun ("_IO_vfscanf" _IO_vfscanf) :int
  (arg0 :pointer)
  (arg1 :string)
  (arg2 :pointer)
  (arg3 :pointer))

(cffi:defcfun ("_IO_vfprintf" _IO_vfprintf) :int
  (arg0 :pointer)
  (arg1 :string)
  (arg2 :pointer))

(cffi:defcfun ("_IO_padn" _IO_padn) :int
  (arg0 :pointer)
  (arg1 :int)
  (arg2 :int))

(cffi:defcfun ("_IO_sgetn" _IO_sgetn) :unsigned-long
  (arg0 :pointer)
  (arg1 :pointer)
  (arg2 :unsigned-long))

(cffi:defcfun ("_IO_seekoff" _IO_seekoff) :long-long
  (arg0 :pointer)
  (arg1 :long-long)
  (arg2 :int)
  (arg3 :int))

(cffi:defcfun ("_IO_seekpos" _IO_seekpos) :long-long
  (arg0 :pointer)
  (arg1 :long-long)
  (arg2 :int))

(cffi:defcfun ("_IO_free_backup_area" _IO_free_backup_area) :void
  (arg0 :pointer))

(cl:defconstant _IOFBF 0)

(cl:defconstant _IOLBF 1)

(cl:defconstant _IONBF 2)

(cl:defconstant BUFSIZ 8192)

(cl:defconstant P_tmpdir "/tmp")

(cl:defconstant L_tmpnam 20)

(cl:defconstant TMP_MAX 238328)

(cl:defconstant FILENAME_MAX 4096)

(cl:defconstant L_ctermid 9)

(cl:defconstant FOPEN_MAX 16)

(cffi:defcvar ("stdin" stdin)
 :pointer)

(cffi:defcvar ("stdout" stdout)
 :pointer)

(cffi:defcvar ("stderr" stderr)
 :pointer)

(cffi:defcfun ("remove" remove) :int
  (__filename :string))

(cffi:defcfun ("rename" rename) :int
  (__old :string)
  (__new :string))

(cffi:defcfun ("renameat" renameat) :int
  (__oldfd :int)
  (__old :string)
  (__newfd :int)
  (__new :string))

(cffi:defcfun ("tmpfile" tmpfile) :pointer)

(cffi:defcfun ("tmpnam" tmpnam) :string
  (__s :string))

(cffi:defcfun ("tmpnam_r" tmpnam_r) :string
  (__s :string))

(cffi:defcfun ("tempnam" tempnam) :string
  (__dir :string)
  (__pfx :string))

(cffi:defcfun ("fclose" fclose) :int
  (__stream :pointer))

(cffi:defcfun ("fflush" fflush) :int
  (__stream :pointer))

(cffi:defcfun ("fflush_unlocked" fflush_unlocked) :int
  (__stream :pointer))

(cffi:defcfun ("fopen" fopen) :pointer
  (__filename :string)
  (__modes :string))

(cffi:defcfun ("freopen" freopen) :pointer
  (__filename :string)
  (__modes :string)
  (__stream :pointer))

(cffi:defcfun ("fdopen" fdopen) :pointer
  (__fd :int)
  (__modes :string))

(cffi:defcfun ("fmemopen" fmemopen) :pointer
  (__s :pointer)
  (__len :unsigned-long)
  (__modes :string))

(cffi:defcfun ("open_memstream" open_memstream) :pointer
  (__bufloc :pointer)
  (__sizeloc :pointer))

(cffi:defcfun ("setbuf" setbuf) :void
  (__stream :pointer)
  (__buf :string))

(cffi:defcfun ("setvbuf" setvbuf) :int
  (__stream :pointer)
  (__buf :string)
  (__modes :int)
  (__n :unsigned-long))

(cffi:defcfun ("setbuffer" setbuffer) :void
  (__stream :pointer)
  (__buf :string)
  (__size :unsigned-long))

(cffi:defcfun ("setlinebuf" setlinebuf) :void
  (__stream :pointer))

(cffi:defcfun ("fprintf" fprintf) :int
  (__stream :pointer)
  (__format :string)
  cl:&rest)

(cffi:defcfun ("printf" printf) :int
  (__format :string)
  cl:&rest)

(cffi:defcfun ("sprintf" sprintf) :int
  (__s :string)
  (__format :string)
  cl:&rest)

(cffi:defcfun ("vfprintf" vfprintf) :int
  (__s :pointer)
  (__format :string)
  (__arg :pointer))

(cffi:defcfun ("vprintf" vprintf) :int
  (__format :string)
  (__arg :pointer))

(cffi:defcfun ("vsprintf" vsprintf) :int
  (__s :string)
  (__format :string)
  (__arg :pointer))

(cffi:defcfun ("snprintf" snprintf) :int
  (__s :string)
  (__maxlen :unsigned-long)
  (__format :string)
  cl:&rest)

(cffi:defcfun ("vsnprintf" vsnprintf) :int
  (__s :string)
  (__maxlen :unsigned-long)
  (__format :string)
  (__arg :pointer))

(cffi:defcfun ("vdprintf" vdprintf) :int
  (__fd :int)
  (__fmt :string)
  (__arg :pointer))

(cffi:defcfun ("dprintf" dprintf) :int
  (__fd :int)
  (__fmt :string)
  cl:&rest)

(cffi:defcfun ("fscanf" fscanf) :int
  (__stream :pointer)
  (__format :string)
  cl:&rest)

(cffi:defcfun ("scanf" scanf) :int
  (__format :string)
  cl:&rest)

(cffi:defcfun ("sscanf" sscanf) :int
  (__s :string)
  (__format :string)
  cl:&rest)

(cffi:defcfun ("__isoc99_fscanf" __isoc99_fscanf) :int
  (__stream :pointer)
  (__format :string)
  cl:&rest)

(cffi:defcfun ("__isoc99_scanf" __isoc99_scanf) :int
  (__format :string)
  cl:&rest)

(cffi:defcfun ("__isoc99_sscanf" __isoc99_sscanf) :int
  (__s :string)
  (__format :string)
  cl:&rest)

(cffi:defcfun ("vfscanf" vfscanf) :int
  (__s :pointer)
  (__format :string)
  (__arg :pointer))

(cffi:defcfun ("vscanf" vscanf) :int
  (__format :string)
  (__arg :pointer))

(cffi:defcfun ("vsscanf" vsscanf) :int
  (__s :string)
  (__format :string)
  (__arg :pointer))

(cffi:defcfun ("__isoc99_vfscanf" __isoc99_vfscanf) :int
  (__s :pointer)
  (__format :string)
  (__arg :pointer))

(cffi:defcfun ("__isoc99_vscanf" __isoc99_vscanf) :int
  (__format :string)
  (__arg :pointer))

(cffi:defcfun ("__isoc99_vsscanf" __isoc99_vsscanf) :int
  (__s :string)
  (__format :string)
  (__arg :pointer))

(cffi:defcfun ("fgetc" fgetc) :int
  (__stream :pointer))

(cffi:defcfun ("getc" getc) :int
  (__stream :pointer))

(cffi:defcfun ("getchar" getchar) :int)

(cffi:defcfun ("getc_unlocked" getc_unlocked) :int
  (__stream :pointer))

(cffi:defcfun ("getchar_unlocked" getchar_unlocked) :int)

(cffi:defcfun ("fgetc_unlocked" fgetc_unlocked) :int
  (__stream :pointer))

(cffi:defcfun ("fputc" fputc) :int
  (__c :int)
  (__stream :pointer))

(cffi:defcfun ("putc" putc) :int
  (__c :int)
  (__stream :pointer))

(cffi:defcfun ("putchar" putchar) :int
  (__c :int))

(cffi:defcfun ("fputc_unlocked" fputc_unlocked) :int
  (__c :int)
  (__stream :pointer))

(cffi:defcfun ("putc_unlocked" putc_unlocked) :int
  (__c :int)
  (__stream :pointer))

(cffi:defcfun ("putchar_unlocked" putchar_unlocked) :int
  (__c :int))

(cffi:defcfun ("getw" getw) :int
  (__stream :pointer))

(cffi:defcfun ("putw" putw) :int
  (__w :int)
  (__stream :pointer))

(cffi:defcfun ("fgets" fgets) :string
  (__s :string)
  (__n :int)
  (__stream :pointer))

(cffi:defcfun ("gets" gets) :string
  (__s :string))

(cffi:defcfun ("__getdelim" __getdelim) :int
  (__lineptr :pointer)
  (__n :pointer)
  (__delimiter :int)
  (__stream :pointer))

(cffi:defcfun ("getdelim" getdelim) :int
  (__lineptr :pointer)
  (__n :pointer)
  (__delimiter :int)
  (__stream :pointer))

(cffi:defcfun ("getline" getline) :int
  (__lineptr :pointer)
  (__n :pointer)
  (__stream :pointer))

(cffi:defcfun ("fputs" fputs) :int
  (__s :string)
  (__stream :pointer))

(cffi:defcfun ("puts" puts) :int
  (__s :string))

(cffi:defcfun ("ungetc" ungetc) :int
  (__c :int)
  (__stream :pointer))

(cffi:defcfun ("fread" fread) :unsigned-long
  (__ptr :pointer)
  (__size :unsigned-long)
  (__n :unsigned-long)
  (__stream :pointer))

(cffi:defcfun ("fwrite" fwrite) :unsigned-long
  (__ptr :pointer)
  (__size :unsigned-long)
  (__n :unsigned-long)
  (__s :pointer))

(cffi:defcfun ("fread_unlocked" fread_unlocked) :unsigned-long
  (__ptr :pointer)
  (__size :unsigned-long)
  (__n :unsigned-long)
  (__stream :pointer))

(cffi:defcfun ("fwrite_unlocked" fwrite_unlocked) :unsigned-long
  (__ptr :pointer)
  (__size :unsigned-long)
  (__n :unsigned-long)
  (__stream :pointer))

(cffi:defcfun ("fseek" fseek) :int
  (__stream :pointer)
  (__off :long)
  (__whence :int))

(cffi:defcfun ("ftell" ftell) :long
  (__stream :pointer))

(cffi:defcfun ("rewind" rewind) :void
  (__stream :pointer))

(cffi:defcfun ("fseeko" fseeko) :int
  (__stream :pointer)
  (__off :long)
  (__whence :int))

(cffi:defcfun ("ftello" ftello) :long
  (__stream :pointer))

(cffi:defcfun ("fgetpos" fgetpos) :int
  (__stream :pointer)
  (__pos :pointer))

(cffi:defcfun ("fsetpos" fsetpos) :int
  (__stream :pointer)
  (__pos :pointer))

(cffi:defcfun ("clearerr" clearerr) :void
  (__stream :pointer))

(cffi:defcfun ("feof" feof) :int
  (__stream :pointer))

(cffi:defcfun ("ferror" ferror) :int
  (__stream :pointer))

(cffi:defcfun ("clearerr_unlocked" clearerr_unlocked) :void
  (__stream :pointer))

(cffi:defcfun ("feof_unlocked" feof_unlocked) :int
  (__stream :pointer))

(cffi:defcfun ("ferror_unlocked" ferror_unlocked) :int
  (__stream :pointer))

(cffi:defcfun ("perror" perror) :void
  (__s :string))

(cffi:defcvar ("sys_nerr" sys_nerr)
 :int)

(cffi:defcvar ("sys_errlist" sys_errlist)
 :pointer)

(cffi:defcfun ("fileno" fileno) :int
  (__stream :pointer))

(cffi:defcfun ("fileno_unlocked" fileno_unlocked) :int
  (__stream :pointer))

(cffi:defcfun ("popen" popen) :pointer
  (__command :string)
  (__modes :string))

(cffi:defcfun ("pclose" pclose) :int
  (__stream :pointer))

(cffi:defcfun ("ctermid" ctermid) :string
  (__s :string))

(cffi:defcfun ("flockfile" flockfile) :void
  (__stream :pointer))

(cffi:defcfun ("ftrylockfile" ftrylockfile) :int
  (__stream :pointer))

(cffi:defcfun ("funlockfile" funlockfile) :void
  (__stream :pointer))


