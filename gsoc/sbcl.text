Contact Info
Name:Tucker Pershing DiNapoli
Phone: 603-641-4917
School Email: tpm29@wildcats.unh.edu
Personal Email: t.dinapoli42@gmail.com or Hitchiker42@gmail.com
IRC Nick:TuckerD (on freenode)
Github: https://github.com/hitchiker42

Title: Vectorization of Sequence functions using SSE compiler Intrinsics

Project aims: To create optimized versions of several sequence functions using
x86-64 SSE SIMD instructions. The number of functions that will be optimized
will depend on the time it takes for each function, but at least: count,
find/position, remove/delete, substitute/nsubstitute, search and replace will
be implemented. Further functions to be implemented if time allows would be the
map and reduce functions. These functions will be implemented with support for
integer and floating point datatypes, as these are the supported simd datatypes
in sbcl as of the time of this proposal, however should further datatypes (i.e
bytes or chars) be added implementations useing these datatypes will be
considered.

Project Plan: During the first two weeks the find/position functions will be
implemented, as these seems the most straightforward and will be an early
indicator of project progress. For midterm the count, remove/delete and
substitute/nsubstitute functions will be implemented, if time permits the if
and if-not variants of these functions will be implemented for basic comparison
(as it would not be reasonably possible to implement these for arbitrary
functions). The second half of the project will focus on the more challenging
functions of search and replace. As these functions take two sequences as
arguments and deal with subsequences they will likely be much more difficult to
implement. Having only these two functions for the latter half leaves a buffer
of time for any unexpected difficulties, should this not prove enough work then
work will be done on implementing the map function.

Timeline: I intend to spend about 40 hours a week on the project, and to break
my work up roughly as follows
week 1:Planning and writing of utitly functions and macros for find/position
week 2:Work on the find/position functions to have a deliverable for the first
two weeks
week 3-4:Planning and writing of utitly code for other one arguement sequence
functions(that is only one argument is a sequence i.e. substitute,count,etc...)
and consolidating code from find/position for use with these functions
week 5-6:Work on and begin testing the rest of the one argument sequence
functions
week 6-7:Before midterm fininsh testing and do some profiling for the one
arguement sequence functions to be able to deliver them for MidTerm
week 8-10:Repeat the same process as for the one arguement functions for the
functions that take two sequence arguements,(search and replace)
week 10-12:Writing and Testing of the two argument sequence arguements
(Note: If time permits in weeks 8-12 possibly work on the map function)
week 12-end:Work on Testing and polishing all code such that it is presentable
as a finished product by the end of the GSoC. If it seems useful write a
package/library of utility simd functions from the ones I have used.

Risks/Challenges: The biggest challenge in this project is working with the
sbcl simd intrinsics, as simd instructions are a fairly new introduction to the
sbcl codebase any issues incountered with their use will likely be
undocumented, requiring identifying and working around these issues. While this
could be beneficial in helping to flesh out SIMD support in sbcl it adds in a
unpredictable factor to the time and difficulty of the project. That said the
proposed work is fairly modest by design and is very modular such that there
will still be usable code even if the project is not fully completed. The
modular nature deals with what seems to be the biggest issue with GSoC
projects, this being scope, a project being to large to complete or not
large enough for the whole summer.

Why Me: I feel I am an ideal candidate for this project as x86-64 SIMD
instructions are something I have studied and worked with extensively both on
the assembly level and as gcc compiler intrinsics. My area of study is in
scientific computing and I enjoy writing scientific lisp code which by its very
nature requires highly optimized code, and uses a large amount of vector
operations. Thus this is an area of importance to me for my code, having simd
optimized vector functions would help a lot in writing workable high
performance lisp code. I have never been really involved in an open source
project before and so I would really like this opportunity to work on a project
I find interesting and to become a part of an open source project I use often.

Background: I am a Senior Physics student at the University of New Hampshire,
and am minoring in computer science. My area of interest is in high performance
scientific computing, specifically computational electrodynamics. Courses I
have taken that would be relevant to this project would be a Numerical Analysis
course I took last year and a high performance computing course this past
semester. In my high performance computing course I did a fairly extensive
project on x86-64 SIMD instructions, focusing on use in C code via gcc
intrinsics. I use open source software in both my academic work and my personal
computing. My first serious exposure to lisp, and what caused by interest in
the language was emacs and emacs-lisp. This ultimately lead me to learning 
common lisp. I use sbcl as my primary lisp implementation because of the speed
I can get with the sbcl compiler. I have no experience working on any major open
source projects, I have worked on version controlled code in groups in class,
so I have some idea of how things work, though this is likely quite different
that working on something the scale of sbcl. I have plenty of experience with
git and have been orientating myself with the sbcl codebase in the past few
weeks, so I should hopefully be fairly familiar with it by the time the project
starts. I have had some interaction in the sbcl community over the past few
weeks, I have posted on the mailing list asking a few questions (under
Hitchiker42@gmail.com) and asked a few questions on irc. I have no commitments
that would conflict with gsoc if I am accepted for the project. I am very
interested in this project and I feel I can do a good job on it, I hope to work
on some aspect of sbcl even if not accepted for GSoC but I would really
appreciate the opportunity provided by GSoC.
