/* This file is automatically generated, do not edit */
#ifndef __FDTD_CONSTS_H__
#define __FDTD_CONSTS_H__
#include <math.h>
enum dimension{
  _x=0,
  _y=1,
  _z=2,
};static const double dx = 1.000000;
static const int num_writes = 5;
static const int threads = 3;
static const double mu = 0.0000012566370614;
static const double episilon = 0.0000000000088542;
static const double sigma = 10000000.000000;
static const int x_max = 50;static const int x_min = -50;
static const int y_max = 50;static const int y_min = -50;
static const int z_max = 50;static const int z_min = -50;
static const double dt = 0.000001;
static const int grid_size = 1000000;
static const int grid_size3 = 3000000;
static const double mu_dt = 0.0000012566370614;
static __attribute__((const))
double default_init_h(double t,enum dimension dim __attribute__((unused))){
return 10000*cos(M_PI*pow(t,2));
}static __attribute__((const))
double default_init_e(double t,enum dimension dim __attribute__((unused))){
return 10000*sin(M_PI*pow(t,2));
}static __attribute__((const))double (*init_fun_e)(double,enum dimension)=default_init_e;
static __attribute__((const))double (*init_fun_h)(double,enum dimension)=default_init_h;
#include <x86intrin.h>
#ifdef __AVX__
static const  __m256d mu_dt_simd = {0.000001,0.000001,0.000001,0.000001};
#endif
#endif