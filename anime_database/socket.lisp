;;; This file was automatically generated by SWIG (http://www.swig.org).
;;; Version 3.0.2
;;;
;;; Do not make changes to this file unless you know what you are doing--modify
;;; the SWIG interface file instead.


;;;SWIG wrapper code starts here

(cl:defmacro defanonenum (cl:&body enums)
   "Converts anonymous enums to defconstants."
  `(cl:progn ,@(cl:loop for value in enums
                        for index = 0 then (cl:1+ index)
                        when (cl:listp value) do (cl:setf index (cl:second value)
                                                          value (cl:first value))
                        collect `(cl:defconstant ,value ,index))))

(cl:eval-when (:compile-toplevel :load-toplevel)
  (cl:unless (cl:fboundp 'swig-lispify)
    (cl:defun swig-lispify (name flag cl:&optional (package cl:*package*))
      (cl:labels ((helper (lst last rest cl:&aux (c (cl:car lst)))
                    (cl:cond
                      ((cl:null lst)
                       rest)
                      ((cl:upper-case-p c)
                       (helper (cl:cdr lst) 'upper
                               (cl:case last
                                 ((lower digit) (cl:list* c #\- rest))
                                 (cl:t (cl:cons c rest)))))
                      ((cl:lower-case-p c)
                       (helper (cl:cdr lst) 'lower (cl:cons (cl:char-upcase c) rest)))
                      ((cl:digit-char-p c)
                       (helper (cl:cdr lst) 'digit 
                               (cl:case last
                                 ((upper lower) (cl:list* c #\- rest))
                                 (cl:t (cl:cons c rest)))))
                      ((cl:char-equal c #\_)
                       (helper (cl:cdr lst) '_ (cl:cons #\- rest)))
                      (cl:t
                       (cl:error "Invalid character: ~A" c)))))
        (cl:let ((fix (cl:case flag
                        ((constant enumvalue) "+")
                        (variable "*")
                        (cl:t ""))))
          (cl:intern
           (cl:concatenate
            'cl:string
            fix
            (cl:nreverse (helper (cl:concatenate 'cl:list name) cl:nil cl:nil))
            fix)
           package))))))

;;;SWIG wrapper code ends here


(cl:defconstant _SYS_SOCKET_H 1)

(cl:defconstant _FEATURES_H 1)

(cl:defconstant _DEFAULT_SOURCE 1)

(cl:defconstant _BSD_SOURCE 1)

(cl:defconstant _SVID_SOURCE 1)

(cl:defconstant __USE_POSIX_IMPLICITLY 1)

(cl:defconstant _POSIX_SOURCE 1)

(cl:defconstant _POSIX_C_SOURCE 200809L)

(cl:defconstant __USE_POSIX 1)

(cl:defconstant __USE_POSIX2 1)

(cl:defconstant __USE_POSIX199309 1)

(cl:defconstant __USE_POSIX199506 1)

(cl:defconstant __USE_XOPEN2K 1)

(cl:defconstant __USE_ISOC95 1)

(cl:defconstant __USE_ISOC99 1)

(cl:defconstant __USE_XOPEN2K8 1)

(cl:defconstant _ATFILE_SOURCE 1)

(cl:defconstant __USE_MISC 1)

(cl:defconstant __USE_BSD 1)

(cl:defconstant __USE_SVID 1)

(cl:defconstant __USE_ATFILE 1)

(cl:defconstant __USE_FORTIFY_LEVEL 0)

(cl:defconstant _STDC_PREDEF_H 1)

(cl:defconstant __STDC_IEC_559__ 1)

(cl:defconstant __STDC_IEC_559_COMPLEX__ 1)

(cl:defconstant __STDC_ISO_10646__ 201103L)

(cl:defconstant __STDC_NO_THREADS__ 1)

(cl:defconstant __GNU_LIBRARY__ 6)

(cl:defconstant __GLIBC__ 2)

(cl:defconstant __GLIBC_MINOR__ 19)

(cl:defconstant _SYS_CDEFS_H 1)

(cl:defconstant __WORDSIZE 32)

(cl:defconstant _SYS_UIO_H 1)

(cl:defconstant _SYS_TYPES_H 1)

(cl:defconstant _BITS_TYPES_H 1)

(cl:defconstant _BITS_TYPESIZES_H 1)

(cl:defconstant __FD_SETSIZE 1024)

(cffi:defcstruct __fsid_t
	(__val :pointer))

(cl:defconstant __clock_t_defined 1)

(cl:defconstant __time_t_defined 1)

(cl:defconstant __clockid_t_defined 1)

(cl:defconstant __timer_t_defined 1)

(cl:defconstant __BIT_TYPES_DEFINED__ 1)

(cl:defconstant _ENDIAN_H 1)

(cl:defconstant __LITTLE_ENDIAN 1234)

(cl:defconstant __BIG_ENDIAN 4321)

(cl:defconstant __PDP_ENDIAN 3412)

(cl:defconstant __BYTE_ORDER 1234)

(cl:defconstant __FLOAT_WORD_ORDER 1234)

(cl:defconstant LITTLE_ENDIAN 1234)

(cl:defconstant BIG_ENDIAN 4321)

(cl:defconstant PDP_ENDIAN 3412)

(cl:defconstant BYTE_ORDER 1234)

(cl:defconstant _BITS_BYTESWAP_H 1)

(cffi:defcfun ("__bswap_16" __bswap_16) :unsigned-short
  (__bsx :unsigned-short))

(cffi:defcfun ("__bswap_32" __bswap_32) :unsigned-int
  (__bsx :unsigned-int))

(cffi:defcfun ("__bswap_64" __bswap_64) :unsigned-long-long
  (__bsx :unsigned-long-long))

(cl:defconstant _SYS_SELECT_H 1)

(cl:defconstant _SIGSET_H_types 1)

(cffi:defcstruct __sigset_t
	(__val :pointer))

(cl:defconstant _STRUCT_TIMEVAL 1)

(cffi:defcstruct timeval
	(tv_sec :long)
	(tv_usec :long))

(cffi:defcstruct fd_set
	(__fds_bits :pointer))

(cl:defconstant FD_SETSIZE 1024)

(cffi:defcfun ("select" select) :int
  (__nfds :int)
  (__readfds :pointer)
  (__writefds :pointer)
  (__exceptfds :pointer)
  (__timeout :pointer))

(cffi:defcfun ("pselect" pselect) :int
  (__nfds :int)
  (__readfds :pointer)
  (__writefds :pointer)
  (__exceptfds :pointer)
  (__timeout :pointer)
  (__sigmask :pointer))

(cl:defconstant _SYS_SYSMACROS_H 1)

(cffi:defcfun ("gnu_dev_major" gnu_dev_major) :unsigned-int
  (__dev :unsigned-long-long))

(cffi:defcfun ("gnu_dev_minor" gnu_dev_minor) :unsigned-int
  (__dev :unsigned-long-long))

(cffi:defcfun ("gnu_dev_makedev" gnu_dev_makedev) :unsigned-long-long
  (__major :unsigned-int)
  (__minor :unsigned-int))

(cl:defconstant _BITS_PTHREADTYPES_H 1)

(cl:defconstant __SIZEOF_PTHREAD_ATTR_T 36)

(cl:defconstant __SIZEOF_PTHREAD_MUTEX_T 24)

(cl:defconstant __SIZEOF_PTHREAD_MUTEXATTR_T 4)

(cl:defconstant __SIZEOF_PTHREAD_COND_T 48)

(cl:defconstant __SIZEOF_PTHREAD_CONDATTR_T 4)

(cl:defconstant __SIZEOF_PTHREAD_RWLOCK_T 32)

(cl:defconstant __SIZEOF_PTHREAD_RWLOCKATTR_T 8)

(cl:defconstant __SIZEOF_PTHREAD_BARRIER_T 20)

(cl:defconstant __SIZEOF_PTHREAD_BARRIERATTR_T 4)

(cffi:defcunion pthread_attr_t
	(__size :pointer)
	(__align :long))

(cl:defconstant __have_pthread_attr_t 1)

(cffi:defcstruct __pthread_slist_t
	(__next :pointer))

(cffi:defcunion pthread_mutex_t
	(__data :pointer)
	(__size :pointer)
	(__align :long))

(cffi:defcstruct __pthread_mutex_s
	(__lock :int)
	(__count :unsigned-int)
	(__owner :int)
	(__kind :int)
	(__nusers :unsigned-int)
	(d :pointer)
	(__list __pthread_slist_t))

(cffi:defcunion pthread_mutexattr_t
	(__size :pointer)
	(__align :int))

(cffi:defcunion pthread_cond_t
	(__data :pointer)
	(__size :pointer)
	(__align :long-long))

(cffi:defcstruct pthread_cond_t___data
	(__lock :int)
	(__futex :unsigned-int)
	(__total_seq :unsigned-long-long)
	(__wakeup_seq :unsigned-long-long)
	(__woken_seq :unsigned-long-long)
	(__mutex :pointer)
	(__nwaiters :unsigned-int)
	(__broadcast_seq :unsigned-int))

(cffi:defcunion pthread_condattr_t
	(__size :pointer)
	(__align :int))

(cffi:defcunion pthread_rwlock_t
	(__data :pointer)
	(__size :pointer)
	(__align :long))

(cffi:defcstruct pthread_rwlock_t___data
	(__lock :int)
	(__nr_readers :unsigned-int)
	(__readers_wakeup :unsigned-int)
	(__writer_wakeup :unsigned-int)
	(__nr_readers_queued :unsigned-int)
	(__nr_writers_queued :unsigned-int)
	(__flags :unsigned-char)
	(__shared :unsigned-char)
	(__pad1 :unsigned-char)
	(__pad2 :unsigned-char)
	(__writer :int))

(cffi:defcunion pthread_rwlockattr_t
	(__size :pointer)
	(__align :long))

(cffi:defcunion pthread_barrier_t
	(__size :pointer)
	(__align :long))

(cffi:defcunion pthread_barrierattr_t
	(__size :pointer)
	(__align :int))

(cl:defconstant _BITS_UIO_H 1)

(cl:defconstant UIO_MAXIOV 1024)

(cffi:defcstruct iovec
	(iov_base :pointer)
	(iov_len :unsigned-long))

(cffi:defcfun ("readv" readv) :int
  (__fd :int)
  (__iovec :pointer)
  (__count :int))

(cffi:defcfun ("writev" writev) :int
  (__fd :int)
  (__iovec :pointer)
  (__count :int))

(cffi:defcfun ("preadv" preadv) :int
  (__fd :int)
  (__iovec :pointer)
  (__count :int)
  (__offset :long))

(cffi:defcfun ("pwritev" pwritev) :int
  (__fd :int)
  (__iovec :pointer)
  (__count :int)
  (__offset :long))

(cffi:defcenum __socket_type
	(:SOCK_STREAM #.1)
	(:SOCK_DGRAM #.2)
	(:SOCK_RAW #.3)
	(:SOCK_RDM #.4)
	(:SOCK_SEQPACKET #.5)
	(:SOCK_DCCP #.6)
	(:SOCK_PACKET #.10)
	(:SOCK_CLOEXEC #.#o2000000)
	(:SOCK_NONBLOCK #.#o0004000))

(cl:defconstant PF_UNSPEC 0)

(cl:defconstant PF_LOCAL 1)

(cl:defconstant PF_UNIX 1)

(cl:defconstant PF_FILE 1)

(cl:defconstant PF_INET 2)

(cl:defconstant PF_AX25 3)

(cl:defconstant PF_IPX 4)

(cl:defconstant PF_APPLETALK 5)

(cl:defconstant PF_NETROM 6)

(cl:defconstant PF_BRIDGE 7)

(cl:defconstant PF_ATMPVC 8)

(cl:defconstant PF_X25 9)

(cl:defconstant PF_INET6 10)

(cl:defconstant PF_ROSE 11)

(cl:defconstant PF_DECnet 12)

(cl:defconstant PF_NETBEUI 13)

(cl:defconstant PF_SECURITY 14)

(cl:defconstant PF_KEY 15)

(cl:defconstant PF_NETLINK 16)

(cl:defconstant PF_ROUTE 16)

(cl:defconstant PF_PACKET 17)

(cl:defconstant PF_ASH 18)

(cl:defconstant PF_ECONET 19)

(cl:defconstant PF_ATMSVC 20)

(cl:defconstant PF_RDS 21)

(cl:defconstant PF_SNA 22)

(cl:defconstant PF_IRDA 23)

(cl:defconstant PF_PPPOX 24)

(cl:defconstant PF_WANPIPE 25)

(cl:defconstant PF_LLC 26)

(cl:defconstant PF_CAN 29)

(cl:defconstant PF_TIPC 30)

(cl:defconstant PF_BLUETOOTH 31)

(cl:defconstant PF_IUCV 32)

(cl:defconstant PF_RXRPC 33)

(cl:defconstant PF_ISDN 34)

(cl:defconstant PF_PHONET 35)

(cl:defconstant PF_IEEE802154 36)

(cl:defconstant PF_CAIF 37)

(cl:defconstant PF_ALG 38)

(cl:defconstant PF_NFC 39)

(cl:defconstant PF_VSOCK 40)

(cl:defconstant PF_MAX 41)

(cl:defconstant AF_UNSPEC 0)

(cl:defconstant AF_LOCAL 1)

(cl:defconstant AF_UNIX 1)

(cl:defconstant AF_FILE 1)

(cl:defconstant AF_INET 2)

(cl:defconstant AF_AX25 3)

(cl:defconstant AF_IPX 4)

(cl:defconstant AF_APPLETALK 5)

(cl:defconstant AF_NETROM 6)

(cl:defconstant AF_BRIDGE 7)

(cl:defconstant AF_ATMPVC 8)

(cl:defconstant AF_X25 9)

(cl:defconstant AF_INET6 10)

(cl:defconstant AF_ROSE 11)

(cl:defconstant AF_DECnet 12)

(cl:defconstant AF_NETBEUI 13)

(cl:defconstant AF_SECURITY 14)

(cl:defconstant AF_KEY 15)

(cl:defconstant AF_NETLINK 16)

(cl:defconstant AF_ROUTE 16)

(cl:defconstant AF_PACKET 17)

(cl:defconstant AF_ASH 18)

(cl:defconstant AF_ECONET 19)

(cl:defconstant AF_ATMSVC 20)

(cl:defconstant AF_RDS 21)

(cl:defconstant AF_SNA 22)

(cl:defconstant AF_IRDA 23)

(cl:defconstant AF_PPPOX 24)

(cl:defconstant AF_WANPIPE 25)

(cl:defconstant AF_LLC 26)

(cl:defconstant AF_CAN 29)

(cl:defconstant AF_TIPC 30)

(cl:defconstant AF_BLUETOOTH 31)

(cl:defconstant AF_IUCV 32)

(cl:defconstant AF_RXRPC 33)

(cl:defconstant AF_ISDN 34)

(cl:defconstant AF_PHONET 35)

(cl:defconstant AF_IEEE802154 36)

(cl:defconstant AF_CAIF 37)

(cl:defconstant AF_ALG 38)

(cl:defconstant AF_NFC 39)

(cl:defconstant AF_VSOCK 40)

(cl:defconstant AF_MAX 41)

(cl:defconstant SOL_RAW 255)

(cl:defconstant SOL_DECNET 261)

(cl:defconstant SOL_X25 262)

(cl:defconstant SOL_PACKET 263)

(cl:defconstant SOL_ATM 264)

(cl:defconstant SOL_AAL 265)

(cl:defconstant SOL_IRDA 266)

(cl:defconstant SOMAXCONN 128)

(cl:defconstant _BITS_SOCKADDR_H 1)

(cffi:defcstruct sockaddr
	(sa_family :unsigned-short)
	(sa_data :pointer))

(cl:defconstant _SS_SIZE 128)

(cffi:defcstruct sockaddr_storage
	(ss_family :unsigned-short)
	(__ss_align :unsigned-long)
	(__ss_padding :pointer))

(defanonenum 
	(MSG_OOB #.#x01)
	(MSG_PEEK #.#x02)
	(MSG_DONTROUTE #.#x04)
	(MSG_CTRUNC #.#x08)
	(MSG_PROXY #.#x10)
	(MSG_TRUNC #.#x20)
	(MSG_DONTWAIT #.#x40)
	(MSG_EOR #.#x80)
	(MSG_WAITALL #.#x100)
	(MSG_FIN #.#x200)
	(MSG_SYN #.#x400)
	(MSG_CONFIRM #.#x800)
	(MSG_RST #.#x1000)
	(MSG_ERRQUEUE #.#x2000)
	(MSG_NOSIGNAL #.#x4000)
	(MSG_MORE #.#x8000)
	(MSG_WAITFORONE #.#x10000)
	(MSG_FASTOPEN #.#x20000000)
	(MSG_CMSG_CLOEXEC #.#x40000000))

(cffi:defcstruct msghdr
	(msg_name :pointer)
	(msg_namelen :unsigned-int)
	(msg_iov :pointer)
	(msg_iovlen :unsigned-long)
	(msg_control :pointer)
	(msg_controllen :unsigned-long)
	(msg_flags :int))

(cffi:defcstruct cmsghdr
	(cmsg_len :unsigned-long)
	(cmsg_level :int)
	(cmsg_type :int))

(cffi:defcfun ("__cmsg_nxthdr" __cmsg_nxthdr) :pointer
  (__mhdr :pointer)
  (__cmsg :pointer))

(defanonenum 
	(SCM_RIGHTS #.#x01))

(cl:defconstant FIOSETOWN #x8901)

(cl:defconstant SIOCSPGRP #x8902)

(cl:defconstant FIOGETOWN #x8903)

(cl:defconstant SIOCGPGRP #x8904)

(cl:defconstant SIOCATMARK #x8905)

(cl:defconstant SIOCGSTAMP #x8906)

(cl:defconstant SIOCGSTAMPNS #x8907)

(cl:defconstant SOL_SOCKET 1)

(cl:defconstant SO_DEBUG 1)

(cl:defconstant SO_REUSEADDR 2)

(cl:defconstant SO_TYPE 3)

(cl:defconstant SO_ERROR 4)

(cl:defconstant SO_DONTROUTE 5)

(cl:defconstant SO_BROADCAST 6)

(cl:defconstant SO_SNDBUF 7)

(cl:defconstant SO_RCVBUF 8)

(cl:defconstant SO_SNDBUFFORCE 32)

(cl:defconstant SO_RCVBUFFORCE 33)

(cl:defconstant SO_KEEPALIVE 9)

(cl:defconstant SO_OOBINLINE 10)

(cl:defconstant SO_NO_CHECK 11)

(cl:defconstant SO_PRIORITY 12)

(cl:defconstant SO_LINGER 13)

(cl:defconstant SO_BSDCOMPAT 14)

(cl:defconstant SO_REUSEPORT 15)

(cl:defconstant SO_PASSCRED 16)

(cl:defconstant SO_PEERCRED 17)

(cl:defconstant SO_RCVLOWAT 18)

(cl:defconstant SO_SNDLOWAT 19)

(cl:defconstant SO_RCVTIMEO 20)

(cl:defconstant SO_SNDTIMEO 21)

(cl:defconstant SO_SECURITY_AUTHENTICATION 22)

(cl:defconstant SO_SECURITY_ENCRYPTION_TRANSPORT 23)

(cl:defconstant SO_SECURITY_ENCRYPTION_NETWORK 24)

(cl:defconstant SO_BINDTODEVICE 25)

(cl:defconstant SO_ATTACH_FILTER 26)

(cl:defconstant SO_DETACH_FILTER 27)

(cl:defconstant SO_GET_FILTER 26)

(cl:defconstant SO_PEERNAME 28)

(cl:defconstant SO_TIMESTAMP 29)

(cl:defconstant SCM_TIMESTAMP 29)

(cl:defconstant SO_ACCEPTCONN 30)

(cl:defconstant SO_PEERSEC 31)

(cl:defconstant SO_PASSSEC 34)

(cl:defconstant SO_TIMESTAMPNS 35)

(cl:defconstant SCM_TIMESTAMPNS 35)

(cl:defconstant SO_MARK 36)

(cl:defconstant SO_TIMESTAMPING 37)

(cl:defconstant SCM_TIMESTAMPING 37)

(cl:defconstant SO_PROTOCOL 38)

(cl:defconstant SO_DOMAIN 39)

(cl:defconstant SO_RXQ_OVFL 40)

(cl:defconstant SO_WIFI_STATUS 41)

(cl:defconstant SCM_WIFI_STATUS 41)

(cl:defconstant SO_PEEK_OFF 42)

(cl:defconstant SO_NOFCS 43)

(cl:defconstant SO_LOCK_FILTER 44)

(cl:defconstant SO_SELECT_ERR_QUEUE 45)

(cl:defconstant SO_BUSY_POLL 46)

(cl:defconstant SO_MAX_PACING_RATE 47)

(cl:defconstant SO_BPF_EXTENSIONS 48)

(cffi:defcstruct linger
	(l_onoff :int)
	(l_linger :int))

(cffi:defcstruct osockaddr
	(sa_family :unsigned-short)
	(sa_data :pointer))

(defanonenum 
	(SHUT_RD #.0)
	SHUT_WR
	SHUT_RDWR)

(cffi:defcfun ("socket" socket) :int
  (__domain :int)
  (__type :int)
  (__protocol :int))

(cffi:defcfun ("socketpair" socketpair) :int
  (__domain :int)
  (__type :int)
  (__protocol :int)
  (__fds :pointer))

(cffi:defcfun ("bind" bind) :int
  (__fd :int)
  (__addr :pointer)
  (__len :unsigned-int))

(cffi:defcfun ("getsockname" getsockname) :int
  (__fd :int)
  (__addr :pointer)
  (__len :pointer))

(cffi:defcfun ("connect" connect) :int
  (__fd :int)
  (__addr :pointer)
  (__len :unsigned-int))

(cffi:defcfun ("getpeername" getpeername) :int
  (__fd :int)
  (__addr :pointer)
  (__len :pointer))

(cffi:defcfun ("send" send) :int
  (__fd :int)
  (__buf :pointer)
  (__n :unsigned-long)
  (__flags :int))

(cffi:defcfun ("recv" recv) :int
  (__fd :int)
  (__buf :pointer)
  (__n :unsigned-long)
  (__flags :int))

(cffi:defcfun ("sendto" sendto) :int
  (__fd :int)
  (__buf :pointer)
  (__n :unsigned-long)
  (__flags :int)
  (__addr :pointer)
  (__addr_len :unsigned-int))

(cffi:defcfun ("recvfrom" recvfrom) :int
  (__fd :int)
  (__buf :pointer)
  (__n :unsigned-long)
  (__flags :int)
  (__addr :pointer)
  (__addr_len :pointer))

(cffi:defcfun ("sendmsg" sendmsg) :int
  (__fd :int)
  (__message :pointer)
  (__flags :int))

(cffi:defcfun ("recvmsg" recvmsg) :int
  (__fd :int)
  (__message :pointer)
  (__flags :int))

(cffi:defcfun ("getsockopt" getsockopt) :int
  (__fd :int)
  (__level :int)
  (__optname :int)
  (__optval :pointer)
  (__optlen :pointer))

(cffi:defcfun ("setsockopt" setsockopt) :int
  (__fd :int)
  (__level :int)
  (__optname :int)
  (__optval :pointer)
  (__optlen :unsigned-int))

(cffi:defcfun ("listen" listen) :int
  (__fd :int)
  (__n :int))

(cffi:defcfun ("accept" accept) :int
  (__fd :int)
  (__addr :pointer)
  (__addr_len :pointer))

(cffi:defcfun ("shutdown" shutdown) :int
  (__fd :int)
  (__how :int))

(cffi:defcfun ("sockatmark" sockatmark) :int
  (__fd :int))

(cffi:defcfun ("isfdtype" isfdtype) :int
  (__fd :int)
  (__fdtype :int))

(cl:defconstant _NETINET_IN_H 1)

(cl:defconstant _STDINT_H 1)

(cl:defconstant _BITS_WCHAR_H 1)

(cl:defconstant __WCHAR_MAX (cl:+ #x7fffffff \\0))

(cl:defconstant __WCHAR_MIN (cl:+ -(0x7fffffff (cl:- \\0) 1)))

(cl:defconstant INT8_MIN -128)

(cl:defconstant INT16_MIN (cl:- 32767 1))

(cl:defconstant INT32_MIN (cl:- 2147483647 1))

(cl:defconstant INT64_MIN (cl:- 9223372036854775807LL 1))

(cl:defconstant INT8_MAX 127)

(cl:defconstant INT16_MAX 32767)

(cl:defconstant INT32_MAX 2147483647)

(cl:defconstant INT64_MAX 9223372036854775807LL)

(cl:defconstant UINT8_MAX 255)

(cl:defconstant UINT16_MAX 65535)

(cl:defconstant UINT32_MAX 4294967295)

(cl:defconstant UINT64_MAX 18446744073709551615ULL)

(cl:defconstant INT_LEAST8_MIN -128)

(cl:defconstant INT_LEAST16_MIN (cl:- 32767 1))

(cl:defconstant INT_LEAST32_MIN (cl:- 2147483647 1))

(cl:defconstant INT_LEAST64_MIN (cl:- 9223372036854775807LL 1))

(cl:defconstant INT_LEAST8_MAX 127)

(cl:defconstant INT_LEAST16_MAX 32767)

(cl:defconstant INT_LEAST32_MAX 2147483647)

(cl:defconstant INT_LEAST64_MAX 9223372036854775807LL)

(cl:defconstant UINT_LEAST8_MAX 255)

(cl:defconstant UINT_LEAST16_MAX 65535)

(cl:defconstant UINT_LEAST32_MAX 4294967295)

(cl:defconstant UINT_LEAST64_MAX 18446744073709551615ULL)

(cl:defconstant INT_FAST8_MIN -128)

(cl:defconstant INT_FAST16_MIN (cl:- 2147483647 1))

(cl:defconstant INT_FAST32_MIN (cl:- 2147483647 1))

(cl:defconstant INT_FAST64_MIN (cl:- 9223372036854775807LL 1))

(cl:defconstant INT_FAST8_MAX 127)

(cl:defconstant INT_FAST16_MAX 2147483647)

(cl:defconstant INT_FAST32_MAX 2147483647)

(cl:defconstant INT_FAST64_MAX 9223372036854775807LL)

(cl:defconstant UINT_FAST8_MAX 255)

(cl:defconstant UINT_FAST16_MAX 4294967295)

(cl:defconstant UINT_FAST32_MAX 4294967295)

(cl:defconstant UINT_FAST64_MAX 18446744073709551615ULL)

(cl:defconstant INTPTR_MIN (cl:- 2147483647 1))

(cl:defconstant INTPTR_MAX 2147483647)

(cl:defconstant UINTPTR_MAX 4294967295)

(cl:defconstant INTMAX_MIN (cl:- 9223372036854775807LL 1))

(cl:defconstant INTMAX_MAX 9223372036854775807LL)

(cl:defconstant UINTMAX_MAX 18446744073709551615ULL)

(cl:defconstant PTRDIFF_MIN (cl:- 2147483647 1))

(cl:defconstant PTRDIFF_MAX 2147483647)

(cl:defconstant SIG_ATOMIC_MIN (cl:- 2147483647 1))

(cl:defconstant SIG_ATOMIC_MAX 2147483647)

(cl:defconstant SIZE_MAX 4294967295)

(cl:defconstant WCHAR_MIN (cl:+ -(0x7fffffff (cl:- \\0) 1)))

(cl:defconstant WCHAR_MAX (cl:+ #x7fffffff \\0))

(cl:defconstant WINT_MIN 0)

(cl:defconstant WINT_MAX 4294967295)

(cffi:defcstruct in_addr
	(s_addr :unsigned-int))

(cl:defconstant IP_OPTIONS 4)

(cl:defconstant IP_HDRINCL 3)

(cl:defconstant IP_TOS 1)

(cl:defconstant IP_TTL 2)

(cl:defconstant IP_RECVOPTS 6)

(cl:defconstant IP_RETOPTS 7)

(cl:defconstant IP_MULTICAST_IF 32)

(cl:defconstant IP_MULTICAST_TTL 33)

(cl:defconstant IP_MULTICAST_LOOP 34)

(cl:defconstant IP_ADD_MEMBERSHIP 35)

(cl:defconstant IP_DROP_MEMBERSHIP 36)

(cl:defconstant IP_UNBLOCK_SOURCE 37)

(cl:defconstant IP_BLOCK_SOURCE 38)

(cl:defconstant IP_ADD_SOURCE_MEMBERSHIP 39)

(cl:defconstant IP_DROP_SOURCE_MEMBERSHIP 40)

(cl:defconstant IP_MSFILTER 41)

(cl:defconstant MCAST_JOIN_GROUP 42)

(cl:defconstant MCAST_BLOCK_SOURCE 43)

(cl:defconstant MCAST_UNBLOCK_SOURCE 44)

(cl:defconstant MCAST_LEAVE_GROUP 45)

(cl:defconstant MCAST_JOIN_SOURCE_GROUP 46)

(cl:defconstant MCAST_LEAVE_SOURCE_GROUP 47)

(cl:defconstant MCAST_MSFILTER 48)

(cl:defconstant IP_MULTICAST_ALL 49)

(cl:defconstant IP_UNICAST_IF 50)

(cl:defconstant MCAST_EXCLUDE 0)

(cl:defconstant MCAST_INCLUDE 1)

(cl:defconstant IP_ROUTER_ALERT 5)

(cl:defconstant IP_PKTINFO 8)

(cl:defconstant IP_PKTOPTIONS 9)

(cl:defconstant IP_PMTUDISC 10)

(cl:defconstant IP_MTU_DISCOVER 10)

(cl:defconstant IP_RECVERR 11)

(cl:defconstant IP_RECVTTL 12)

(cl:defconstant IP_RECVTOS 13)

(cl:defconstant IP_MTU 14)

(cl:defconstant IP_FREEBIND 15)

(cl:defconstant IP_IPSEC_POLICY 16)

(cl:defconstant IP_XFRM_POLICY 17)

(cl:defconstant IP_PASSSEC 18)

(cl:defconstant IP_TRANSPARENT 19)

(cl:defconstant IP_ORIGDSTADDR 20)

(cl:defconstant IP_RECVORIGDSTADDR 20)

(cl:defconstant IP_MINTTL 21)

(cl:defconstant IP_PMTUDISC_DONT 0)

(cl:defconstant IP_PMTUDISC_WANT 1)

(cl:defconstant IP_PMTUDISC_DO 2)

(cl:defconstant IP_PMTUDISC_PROBE 3)

(cl:defconstant SOL_IP 0)

(cl:defconstant IP_DEFAULT_MULTICAST_TTL 1)

(cl:defconstant IP_DEFAULT_MULTICAST_LOOP 1)

(cl:defconstant IP_MAX_MEMBERSHIPS 20)

(cffi:defcstruct ip_opts
	(ip_dst in_addr)
	(ip_opts :pointer))

(cffi:defcstruct ip_mreqn
	(imr_multiaddr in_addr)
	(imr_address in_addr)
	(imr_ifindex :int))

(cffi:defcstruct in_pktinfo
	(ipi_ifindex :int)
	(ipi_spec_dst in_addr)
	(ipi_addr in_addr))

(cl:defconstant IPV6_ADDRFORM 1)

(cl:defconstant IPV6_2292PKTINFO 2)

(cl:defconstant IPV6_2292HOPOPTS 3)

(cl:defconstant IPV6_2292DSTOPTS 4)

(cl:defconstant IPV6_2292RTHDR 5)

(cl:defconstant IPV6_2292PKTOPTIONS 6)

(cl:defconstant IPV6_CHECKSUM 7)

(cl:defconstant IPV6_2292HOPLIMIT 8)

(cl:defconstant IPV6_NEXTHOP 9)

(cl:defconstant IPV6_AUTHHDR 10)

(cl:defconstant IPV6_UNICAST_HOPS 16)

(cl:defconstant IPV6_MULTICAST_IF 17)

(cl:defconstant IPV6_MULTICAST_HOPS 18)

(cl:defconstant IPV6_MULTICAST_LOOP 19)

(cl:defconstant IPV6_JOIN_GROUP 20)

(cl:defconstant IPV6_LEAVE_GROUP 21)

(cl:defconstant IPV6_ROUTER_ALERT 22)

(cl:defconstant IPV6_MTU_DISCOVER 23)

(cl:defconstant IPV6_MTU 24)

(cl:defconstant IPV6_RECVERR 25)

(cl:defconstant IPV6_V6ONLY 26)

(cl:defconstant IPV6_JOIN_ANYCAST 27)

(cl:defconstant IPV6_LEAVE_ANYCAST 28)

(cl:defconstant IPV6_IPSEC_POLICY 34)

(cl:defconstant IPV6_XFRM_POLICY 35)

(cl:defconstant IPV6_RECVPKTINFO 49)

(cl:defconstant IPV6_PKTINFO 50)

(cl:defconstant IPV6_RECVHOPLIMIT 51)

(cl:defconstant IPV6_HOPLIMIT 52)

(cl:defconstant IPV6_RECVHOPOPTS 53)

(cl:defconstant IPV6_HOPOPTS 54)

(cl:defconstant IPV6_RTHDRDSTOPTS 55)

(cl:defconstant IPV6_RECVRTHDR 56)

(cl:defconstant IPV6_RTHDR 57)

(cl:defconstant IPV6_RECVDSTOPTS 58)

(cl:defconstant IPV6_DSTOPTS 59)

(cl:defconstant IPV6_RECVTCLASS 66)

(cl:defconstant IPV6_TCLASS 67)

(cl:defconstant IPV6_ADD_MEMBERSHIP 20)

(cl:defconstant IPV6_DROP_MEMBERSHIP 21)

(cl:defconstant IPV6_RXHOPOPTS 54)

(cl:defconstant IPV6_RXDSTOPTS 59)

(cl:defconstant IPV6_PMTUDISC_DONT 0)

(cl:defconstant IPV6_PMTUDISC_WANT 1)

(cl:defconstant IPV6_PMTUDISC_DO 2)

(cl:defconstant IPV6_PMTUDISC_PROBE 3)

(cl:defconstant SOL_IPV6 41)

(cl:defconstant SOL_ICMPV6 58)

(cl:defconstant IPV6_RTHDR_LOOSE 0)

(cl:defconstant IPV6_RTHDR_STRICT 1)

(cl:defconstant IPV6_RTHDR_TYPE_0 0)

(defanonenum 
	(IPPROTO_IP #.0)
	(IPPROTO_ICMP #.1)
	(IPPROTO_IGMP #.2)
	(IPPROTO_IPIP #.4)
	(IPPROTO_TCP #.6)
	(IPPROTO_EGP #.8)
	(IPPROTO_PUP #.12)
	(IPPROTO_UDP #.17)
	(IPPROTO_IDP #.22)
	(IPPROTO_TP #.29)
	(IPPROTO_DCCP #.33)
	(IPPROTO_IPV6 #.41)
	(IPPROTO_RSVP #.46)
	(IPPROTO_GRE #.47)
	(IPPROTO_ESP #.50)
	(IPPROTO_AH #.51)
	(IPPROTO_MTP #.92)
	(IPPROTO_BEETPH #.94)
	(IPPROTO_ENCAP #.98)
	(IPPROTO_PIM #.103)
	(IPPROTO_COMP #.108)
	(IPPROTO_SCTP #.132)
	(IPPROTO_UDPLITE #.136)
	(IPPROTO_RAW #.255)
	IPPROTO_MAX)

(defanonenum 
	(IPPROTO_HOPOPTS #.0)
	(IPPROTO_ROUTING #.43)
	(IPPROTO_FRAGMENT #.44)
	(IPPROTO_ICMPV6 #.58)
	(IPPROTO_NONE #.59)
	(IPPROTO_DSTOPTS #.60)
	(IPPROTO_MH #.135))

(defanonenum 
	(IPPORT_ECHO #.7)
	(IPPORT_DISCARD #.9)
	(IPPORT_SYSTAT #.11)
	(IPPORT_DAYTIME #.13)
	(IPPORT_NETSTAT #.15)
	(IPPORT_FTP #.21)
	(IPPORT_TELNET #.23)
	(IPPORT_SMTP #.25)
	(IPPORT_TIMESERVER #.37)
	(IPPORT_NAMESERVER #.42)
	(IPPORT_WHOIS #.43)
	(IPPORT_MTP #.57)
	(IPPORT_TFTP #.69)
	(IPPORT_RJE #.77)
	(IPPORT_FINGER #.79)
	(IPPORT_TTYLINK #.87)
	(IPPORT_SUPDUP #.95)
	(IPPORT_EXECSERVER #.512)
	(IPPORT_LOGINSERVER #.513)
	(IPPORT_CMDSERVER #.514)
	(IPPORT_EFSSERVER #.520)
	(IPPORT_BIFFUDP #.512)
	(IPPORT_WHOSERVER #.513)
	(IPPORT_ROUTESERVER #.520)
	(IPPORT_RESERVED #.1024)
	(IPPORT_USERRESERVED #.5000))

(cl:defconstant IN_CLASSA_NET #xff000000)

(cl:defconstant IN_CLASSA_NSHIFT 24)

(cl:defconstant IN_CLASSA_HOST (cl:logand #xffffffff ~0xff000000))

(cl:defconstant IN_CLASSA_MAX 128)

(cl:defconstant IN_CLASSB_NET #xffff0000)

(cl:defconstant IN_CLASSB_NSHIFT 16)

(cl:defconstant IN_CLASSB_HOST (cl:logand #xffffffff ~0xffff0000))

(cl:defconstant IN_CLASSB_MAX 65536)

(cl:defconstant IN_CLASSC_NET #xffffff00)

(cl:defconstant IN_CLASSC_NSHIFT 8)

(cl:defconstant IN_CLASSC_HOST (cl:logand #xffffffff ~0xffffff00))

(cl:defconstant IN_LOOPBACKNET 127)

(cffi:defcstruct in6_addr
	(__in6_u :pointer))

(cffi:defcunion in6_addr___in6_u
	(__u6_addr8 :pointer)
	(__u6_addr16 :pointer)
	(__u6_addr32 :pointer))

(cffi:defcvar ("in6addr_any" in6addr_any)
 in6_addr)

(cffi:defcvar ("in6addr_loopback" in6addr_loopback)
 in6_addr)

(cl:defconstant INET_ADDRSTRLEN 16)

(cl:defconstant INET6_ADDRSTRLEN 46)

(cffi:defcstruct sockaddr_in
	(sin_family :unsigned-short)
	(sin_port :unsigned-short)
	(sin_addr in_addr)
	(sin_zero :pointer))

(cffi:defcstruct sockaddr_in6
	(sin6_family :unsigned-short)
	(sin6_port :unsigned-short)
	(sin6_flowinfo :unsigned-int)
	(sin6_addr in6_addr)
	(sin6_scope_id :unsigned-int))

(cffi:defcstruct ip_mreq
	(imr_multiaddr in_addr)
	(imr_interface in_addr))

(cffi:defcstruct ip_mreq_source
	(imr_multiaddr in_addr)
	(imr_interface in_addr)
	(imr_sourceaddr in_addr))

(cffi:defcstruct ipv6_mreq
	(ipv6mr_multiaddr in6_addr)
	(ipv6mr_interface :unsigned-int))

(cffi:defcstruct group_req
	(gr_interface :unsigned-int)
	(gr_group sockaddr_storage))

(cffi:defcstruct group_source_req
	(gsr_interface :unsigned-int)
	(gsr_group sockaddr_storage)
	(gsr_source sockaddr_storage))

(cffi:defcstruct ip_msfilter
	(imsf_multiaddr in_addr)
	(imsf_interface in_addr)
	(imsf_fmode :unsigned-int)
	(imsf_numsrc :unsigned-int)
	(imsf_slist :pointer))

(cffi:defcstruct group_filter
	(gf_interface :unsigned-int)
	(gf_group sockaddr_storage)
	(gf_fmode :unsigned-int)
	(gf_numsrc :unsigned-int)
	(gf_slist :pointer))

(cffi:defcfun ("ntohl" ntohl) :unsigned-int
  (__netlong :unsigned-int))

(cffi:defcfun ("ntohs" ntohs) :unsigned-short
  (__netshort :unsigned-short))

(cffi:defcfun ("htonl" htonl) :unsigned-int
  (__hostlong :unsigned-int))

(cffi:defcfun ("htons" htons) :unsigned-short
  (__hostshort :unsigned-short))

(cffi:defcfun ("bindresvport" bindresvport) :int
  (__sockfd :int)
  (__sock_in :pointer))

(cffi:defcfun ("bindresvport6" bindresvport6) :int
  (__sockfd :int)
  (__sock_in :pointer))

(cl:defconstant _ARPA_INET_H 1)

(cffi:defcfun ("inet_addr" inet_addr) :unsigned-int
  (__cp :string))

(cffi:defcfun ("inet_lnaof" inet_lnaof) :unsigned-int
  (__in in_addr))

(cffi:defcfun ("inet_makeaddr" inet_makeaddr) in_addr
  (__net :unsigned-int)
  (__host :unsigned-int))

(cffi:defcfun ("inet_netof" inet_netof) :unsigned-int
  (__in in_addr))

(cffi:defcfun ("inet_network" inet_network) :unsigned-int
  (__cp :string))

(cffi:defcfun ("inet_ntoa" inet_ntoa) :string
  (__in in_addr))

(cffi:defcfun ("inet_pton" inet_pton) :int
  (__af :int)
  (__cp :string)
  (__buf :pointer))

(cffi:defcfun ("inet_ntop" inet_ntop) :string
  (__af :int)
  (__cp :pointer)
  (__buf :string)
  (__len :unsigned-int))

(cffi:defcfun ("inet_aton" inet_aton) :int
  (__cp :string)
  (__inp :pointer))

(cffi:defcfun ("inet_neta" inet_neta) :string
  (__net :unsigned-int)
  (__buf :string)
  (__len :unsigned-long))

(cffi:defcfun ("inet_net_ntop" inet_net_ntop) :string
  (__af :int)
  (__cp :pointer)
  (__bits :int)
  (__buf :string)
  (__len :unsigned-long))

(cffi:defcfun ("inet_net_pton" inet_net_pton) :int
  (__af :int)
  (__cp :string)
  (__buf :pointer)
  (__len :unsigned-long))

(cffi:defcfun ("inet_nsap_addr" inet_nsap_addr) :unsigned-int
  (__cp :string)
  (__buf :pointer)
  (__len :int))

(cffi:defcfun ("inet_nsap_ntoa" inet_nsap_ntoa) :string
  (__len :int)
  (__cp :pointer)
  (__buf :string))


