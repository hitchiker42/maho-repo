    data[[b.index]] <- temp
    colnames(data)[[a.index]] <- b
    colnames(data)[[b.index]] <- a
    return(data)
}
agree.factor <- function(data){
    na.replace(data, "Neither")
    factor(data, levels = c("Strongly Disagree","Disagree",
                            "Neither", "Agree","Strongly Agree"),
           ordered = TRUE)
}
yesno.factor <- function(data){
    factor(data, levels = c("No", "Not sure", "Yes"),
           ordered = TRUE)
}
yesno.bool.factor <- function(data){
    factor(data, levels = c("No", "Yes"),
           ordered = TRUE)
}
yn.bool.factor <- function(data){
    factor(data, levels = c("N", "Y"),
           ordered = TRUE)
}
days.factor <- function(data){
    factor(data, levels = c("0 days","1-2 days","3-5 days","6-9 days",
                            "10-19 days","20-29 days","All 30 days"),
           ordered = TRUE)
}
grade.factor <- function(data){
    grades <- sub("grade ([1-9][12]?)", "\\1", data, ignore.case = TRUE);
    factor(grades, levels = seq(1:12), ordered = TRUE);
}
order.factors <- function(data){
    if(!is.factor(data)){
        return(data)
    } else {
        ##this is a really lazy way to do this
        ##Also it mostly assumes multiple factors don't share catagories
        if(agrepl("agree", levels(data), ignore.case = TRUE)){
            return(agree.factor(data));
        } else if(agrepl("days", levels(data), ignore.case = TRUE)){
            return(days.factor(data));
        } else if(agrepl("yes", levels(data), ignore.case = TRUE)){
            if(agrepl("not sure", levels(data), ignore.case = TRUE)){
                return(yesno.factor(data));
            } else {
                return(yesno.bool.factor(data));
            }            
        } else if(agrepl("grade", levels(data), ignore.case = TRUE)){
            return(grade.factor(data))
        } else if(agrepl("male", levels(data), ignore.case = TRUE)){
            return(gender.factor(data))
        } else if(agrepl("y", levels(data), ignore.case = TRUE)){
            return(yn.bool.factor(data));
        } else {
            return(data);
        }
    }
}
order.numeric <- function(data){
    temp <- order.factors(data)
    if(!identical(temp, data)){
        return(as.numeric(order.factors(data)))
    } else {
        return(temp)
    }
}

winter <- read.csv("winter_pre_post_clean.csv")
colnames(winter)[which(colnames(winter) == "sleep")] <- "sleep.2"
colnames(winter)[which(colnames(winter) == "Sleep")] <- "sleep"
colnames(winter) <- tolower(colnames(winter))
winter$grade <- grade.factor(winter$grade)

winter$pre[is.na(winter$pre)] <- 0

data.start <- 6
data.end <- (length(winter)-1)

winter[c(data.start:data.end)] <- lapply(winter[c(data.start:data.end)],
                                         order.factors)
winter.factors <- winter
winter[c(data.start:data.end)] <- lapply(winter[c(data.start:data.end)],
                                         as.numeric)
winter <- na.omit(winter) ## Get rid of NAs

pre.indices <- which(winter$pre == 1)
post.indices <- which(winter$pre == 0)
winter.post.t <- lapply(winter[c(data.start:data.end)],
                      function(x){t.test(x[pre.indices],x[post.indices],
                                         var.equal = FALSE)})
winter.post.signif <- Filter(function(x){x$p.value < .2}, winter.post.t)

male.indices <- which(winter$gender == "Male")
female.indices <- which(winter$gender == "Female")
winter.gender.t <- lapply(winter[c(data.start:data.end)],
                        function(x){t.test(x[male.indices],x[female.indices])})
winter.gender.signif <- Filter(function(x){x$p.value < .2}, winter.gender.t)

grades <- c(9:12)
grade.indices <- as.vector(sapply(grades, function(x){which(winter$grade == x)}))
winter.grades.t <- lapply(winter[data.start:data.end],function(x){
    apply(combinations(4,2), 1, function(y){
        eval(bquote(t.test(x[unlist(grade.indices[.(y[1])])],
                           x[unlist(grade.indices[.(y[2])])])))})})

temp <- lapply(winter.grades.t, function(x){Filter(function(y){y$p.value < .2},x)})
winter.grades.signif <- temp[lapply(temp,length)>0]

basic.indices <- c(data.start:(data.start+8))
parents.indices <- grep("^parents", names(winter))
coaches.indices <- grep("^coaches", names(winter))
social.indices <- grep("^social", names(winter))
community.indices <- grep("^community", names(winter))
contract.indices <- grep("contract", names(winter))

use.indices <- (which(as.vector(lapply(winter[c(data.start:data.end)],
                                       function(x){max(na.omit(x))>=7}),
                                mode="logical"))+(data.start-1))


most.indices <- c(parents.indices, coaches.indices,
                  social.indices,community.indices,
                  contract.indices,basic.indices, use.indices)
other.indices <- setdiff(c(data.start:data.end), most.indices)

parents.rhs <- paste(names(winter)[parents.indices], collapse=" + ")
coaches.rhs <- paste(names(winter)[coaches.indices], collapse=" + ")
social.rhs <- paste(names(winter)[social.indices], collapse=" + ")
community.rhs <- paste(names(winter)[community.indices], collapse=" + ")
contract.rhs <- paste(names(winter)[contract.indices], collapse=" + ")
basic.rhs <- paste(names(winter)[basic.indices], collapse=" + ")
other.rhs <- paste(names(winter)[other.indices], collapse=" + ")
rhs <- c(parents.rhs, coaches.rhs, social.rhs, community.rhs,
         contract.rhs, basic.rhs, other.rhs)
use.lm <- function(use){
    lapply(rhs,
           function(x){
               eval(bquote(lm(.(as.formula(sprintf("%s ~ %s",use,x))),
                              data = winter)))
           })
}
reg <- lapply(names(winter)[use.indices], use.lm)
anovas <- lapply(unlist(reg, recursive = FALSE), anova)


warnings()
winter <- read.csv("winter_pre_post_clean.csv")
colnames(winter)[which(colnames(winter) == "sleep")] <- "sleep.2"
colnames(winter)[which(colnames(winter) == "Sleep")] <- "sleep"
colnames(winter) <- tolower(colnames(winter))
winter$grade <- grade.factor(winter$grade)
winter[c(data.start:data.end)] <- lapply(winter[c(data.start:data.end)],
                                         order.factors)
winter <- read.csv("winter_pre_post_clean.csv")
colnames(winter)[which(colnames(winter) == "sleep")] <- "sleep.2"
colnames(winter)[which(colnames(winter) == "Sleep")] <- "sleep"
colnames(winter) <- tolower(colnames(winter))
order.factors(winter[5])
order.factors(winter[8-])
order.factors(winter[8])
winter[8]
is.na(winter[8])
winter[8]==""
agree.factor <- function(data){
    na.replace(data, "Neither")
    data[data == ""] <- "Neither"
    factor(data, levels = c("Strongly Disagree","Disagree",
                            "Neither", "Agree","Strongly Agree"),
           ordered = TRUE)
}
order.factors(winter[8])
 winter[8][2074]
 winter[8][[2074]]
 winter[[8]][[2074]]
 winter[[8]][[2073]]
 winter[[8]][[2073]] == ""
agree.factor <- function(data){
    na.replace(data, "Neither")
    data[which(data == "")] <- "Neither"
    factor(data, levels = c("Strongly Disagree","Disagree",
                            "Neither", "Agree","Strongly Agree"),
           ordered = TRUE)
}
order.factors(winter[8])
agree.factor(winter[8])
help(read.csv)
print(winter[[8]][[2073]])
printf("%s\n",winter[[8]][[2073]])
printf("'%s'\n",winter[[8]][[2073]])
winter[8][winter[8] == ""]
winter[8][which(winter[8] == "")]
which(winter[8] == "")
winter[8][[which(winter[8] == "")]]
winter[[8]][[which(winter[8] == "")]]
winter <- read.csv("winter_pre_post_clean.csv")
colnames(winter)[which(colnames(winter) == "sleep")] <- "sleep.2"
colnames(winter)[which(colnames(winter) == "Sleep")] <- "sleep"
colnames(winter) <- tolower(colnames(winter))
winter[8]
is.na(winter[8])
winter$alcohol
read.csv
winter <- read.csv("winter_pre_post_clean.csv",na.strings=c(""))
colnames(winter)[which(colnames(winter) == "sleep")] <- "sleep.2"
colnames(winter)[which(colnames(winter) == "Sleep")] <- "sleep"
colnames(winter) <- tolower(colnames(winter))
winter[8]
colnames(winter)[which(colnames(winter) == "sleep")] <- "sleep.2"
colnames(winter)[which(colnames(winter) == "Sleep")] <- "sleep"
colnames(winter) <- tolower(colnames(winter))
winter$grade <- grade.factor(winter$grade)

winter$pre[is.na(winter$pre)] <- 0

data.start <- 6
data.end <- (length(winter)-1)

winter[8]
    na.replace(winter[8], "Neither")
is.na(winter[8])
na.replace
winter <- read.csv("winter_pre_post_clean.csv",na.strings=c(""))
colnames(winter)[which(colnames(winter) == "sleep")] <- "sleep.2"
colnames(winter)[which(colnames(winter) == "Sleep")] <- "sleep"
colnames(winter) <- tolower(colnames(winter))
is.na(winter[8])
    na.replace(winter[8], "Neither")
winter[8][is.na(winter[8])] <- "Neither"
winter <- read.csv("winter_pre_post_clean.csv")
colnames(winter)[which(colnames(winter) == "sleep")] <- "sleep.2"
colnames(winter)[which(colnames(winter) == "Sleep")] <- "sleep"
colnames(winter) <- tolower(colnames(winter))
order.factors(winter[8])
    winter[8][which(winter[8] == "")] = "Neither"
    winter[8][which(winter[8] == "")]
    winter[8][.which(winter[8] == "")]
    winter[8][,which(winter[8] == "")]
    winter[8][[which(winter[8] == "")]]
    winter[[8]][[which(winter[8] == "")]]
which(winter[8] == "")
agree.factor <- function(data){
    tmp <- factor(data, levels = c("Strongly Disagree","Disagree",
                            "Neither", "Agree","Strongly Agree"),
                  ordered = TRUE)
    na.replace(tmp, "Neither")
    tmp
}
winter <- read.csv("winter_pre_post_clean.csv", na.strings="")
colnames(winter)[which(colnames(winter) == "sleep")] <- "sleep.2"
colnames(winter)[which(colnames(winter) == "Sleep")] <- "sleep"
colnames(winter) <- tolower(colnames(winter))
order.factors(winter[8])
na.replace(order.factors(winter[8]), "Neither")
levels(winter[8])
na.replace(order.factors(winter[8]), "Neither")
levels(order.factors(winter[8]))
winter[c(data.start:data.end)] <- lapply(winter[c(data.start:data.end)],
                                         order.factors)
winter[8]
na.replace(winter[8], "Neither")
agree.factor(winter[8])
winter <- read.csv("winter_pre_post_clean.csv", na.strings="")
colnames(winter)[which(colnames(winter) == "sleep")] <- "sleep.2"
colnames(winter)[which(colnames(winter) == "Sleep")] <- "sleep"
colnames(winter) <- tolower(colnames(winter))
agree.factor(winter[8])
agree.factor <- function(data){
    na.replace(factor(data, levels = c("Strongly Disagree","Disagree",
                            "Neither", "Agree","Strongly Agree"),
                  ordered = TRUE), "Neither")
}
agree.factor(winter[8])
winter[8]
agree.factor(winter[8])
pre.indices
length(pre.indices)
length(post.indices)
winter$pre
winter$pre[is.na(winter$pre)] <- 0
winter$pre
winter <- read.csv("winter_pre_post_clean.csv", na.strings="")
colnames(winter)[which(colnames(winter) == "sleep")] <- "sleep.2"
colnames(winter)[which(colnames(winter) == "Sleep")] <- "sleep"
colnames(winter) <- tolower(colnames(winter))
winter$grade <- grade.factor(winter$grade)

winter$pre[is.na(winter$pre)] <- 0

data.start <- 6
data.end <- (length(winter)-1)

winter[c(data.start:data.end)] <- lapply(winter[c(data.start:data.end)],
                                         order.factors)
winter.factors <- winter
winter[c(data.start:data.end)] <- lapply(winter[c(data.start:data.end)],
                                         as.numeric)
winter <- na.omit(winter) ## Get rid of NAs

pre.indices <- which(winter$pre == 1)
post.indices <- which(winter$pre == 0)
winter$pre
winter$pre
winter$pre[0]
winter <- read.csv("winter_pre_post_clean.csv", na.strings="")
colnames(winter)[which(colnames(winter) == "sleep")] <- "sleep.2"
colnames(winter)[which(colnames(winter) == "Sleep")] <- "sleep"
colnames(winter) <- tolower(colnames(winter))
winter$grade <- grade.factor(winter$grade)
winter$pre
winter$pre[is.na(winter$pre)] <- 0
winter$pre
winter[c(data.start:data.end)] <- lapply(winter[c(data.start:data.end)],
                                         order.factors)
winter$pre
winter[c(data.start:data.end)] <- lapply(winter[c(data.start:data.end)],
                                         order.factors)
winter$pre
winter$pre
winter <- na.omit(winter) ## Get rid of NAs
winter$pre
winter <- read.csv("winter_pre_post_clean.csv", na.strings="")
colnames(winter)[which(colnames(winter) == "sleep")] <- "sleep.2"
colnames(winter)[which(colnames(winter) == "Sleep")] <- "sleep"
colnames(winter) <- tolower(colnames(winter))
winter$grade <- grade.factor(winter$grade)

na.replace(winter$pre, 0)

is.na(winter$pre)
help(na.replace)
help(is.na)
winter <- read.csv("winter_pre_post_clean.csv")
colnames(winter)[which(colnames(winter) == "sleep")] <- "sleep.2"
colnames(winter)[which(colnames(winter) == "Sleep")] <- "sleep"
colnames(winter) <- tolower(colnames(winter))
winter$grade <- grade.factor(winter$grade)

winter$pre[is.na(winter$pre)] <- 0
na.omit(winter$pre)
winter[c(data.start:data.end)] <- lapply(winter[c(data.start:data.end)],
                                         order.factors)
winter[8]
any
any(winter$pre)
is.null(winter$pre)
na.replace
winter$fall.y.n
is.na(winter$fall.y.n)
t.test(winter$drugs[pre.indices],winter$drugs[post.indices],var.equal = FALSE)
winter$drugs
winter$drugs[pre.indices]
which(winter$pre == 1)
which(winter$pre == 0)
winter$drugs[[pre.indices]]
winter$drugs[pre.indices]
winter$drugs[,pre.indices]
winter$drugs[pre.indices,]
winter$drugs[pre.indices]
winter$drugs[post.indices]
names(winter)
winter[[60]][[pre.indices]]
winter[[60]][[post.indices]]
winter[[60]]
pre.indices
pre.indices
pre.indices
pre.indices <- which(winter$pre == 1)
pre.indices
post.indices <- which(winter$pre == 0)
winter$drugs[pre.indices]
t.test(winter$drugs[pre.indices],winter$drugs[post.indices],var.equal = FALSE)
winter$drugs[post.indices]
length(na.omit(winter))
length(na.omit(winter[0]))
length(na.omit(winter[,0]))
length(na.omit(winter[0,]))
length(na.omit(winter[[0]]))
length(na.omit(winter$drugs))
winter <- read.csv("winter_pre_post_clean.csv")
colnames(winter)[which(colnames(winter) == "sleep")] <- "sleep.2"
colnames(winter)[which(colnames(winter) == "Sleep")] <- "sleep"
colnames(winter) <- tolower(colnames(winter))
winter$grade <- grade.factor(winter$grade)

winter$pre[is.na(winter$pre)] <- 0

data.start <- 6
data.end <- (length(winter)-1)

winter[c(data.start:data.end)] <- lapply(winter[c(data.start:data.end)],
                                         order.factors)
winter.factors <- winter
winter[c(data.start:data.end)] <- lapply(winter[c(data.start:data.end)],
                                         as.numeric)
winter <- na.omit(winter) ## Get rid of NAs

pre.indices <- which(winter$pre == 1)
post.indices <- which(winter$pre == 0)
winter$drugs
t.test(winter$drugs[pre.indices],winter$drugs[post.indices],var.equal = FALSE)
help(t.test)
t.test(winter$drugs[pre.indices],winter$drugs[post.indices],var.equal = FALSE,alternative = "less")
help(t.test)
help(t.test)
winter$survey
puts <- function(...){cat(sprintf("%s",...))}
agrepl <- function(...){any(grepl(...))}
as.numeric.factor <- function(x) {as.numeric(levels(x))[x]}
swapcol <- function(data, a, b){
    a.index <- which(colnames(data) == a)
    b.index <- which(colnames(data) == b)
    temp <- data[[a.index]]
    data[[a.index]] <- data[[b.index]]
    data[[b.index]] <- temp
    colnames(data)[[a.index]] <- b
    colnames(data)[[b.index]] <- a
    return(data)
}
na.replace <- function (x, replace){
    x[is.na(x)] <- replace
    x
}
agree.factor <- function(data){
    na.replace(factor(data, levels = c("Strongly Disagree","Disagree",
                            "Neither", "Agree","Strongly Agree"),
                  ordered = TRUE), "Neither")
}
yesno.factor <- function(data){
    factor(data, levels = c("No", "Not sure", "Yes"),
           ordered = TRUE)
}
yesno.bool.factor <- function(data){
    factor(data, levels = c("No", "Yes"),
           ordered = TRUE)
}
yn.bool.factor <- function(data){
    factor(data, levels = c("N", "Y"),
           ordered = TRUE)
}
days.factor <- function(data){
    factor(data, levels = c("0 days","1-2 days","3-5 days","6-9 days",
                            "10-19 days","20-29 days","All 30 days"),
           ordered = TRUE)
}
grade.factor <- function(data){
    grades <- sub("grade ([1-9][12]?)", "\\1", data, ignore.case = TRUE);
    factor(grades, levels = seq(1:12), ordered = TRUE);
}
gender.factor <- function(data){
    factor(data, levels = c("Male", "Female"), ordered = TRUE)
}
order.factors <- function(data){
    if(!is.factor(data)){
        return(data)
    } else {
        ##this is a really lazy way to do this
        ##Also it mostly assumes multiple factors don't share catagories
        if(agrepl("agree", levels(data), ignore.case = TRUE)){
            return(agree.factor(data));
        } else if(agrepl("days", levels(data), ignore.case = TRUE)){
            return(days.factor(data));
        } else if(agrepl("yes", levels(data), ignore.case = TRUE)){
            if(agrepl("not sure", levels(data), ignore.case = TRUE)){
                return(yesno.factor(data));
            } else {
                return(yesno.bool.factor(data));
            }            
        } else if(agrepl("grade", levels(data), ignore.case = TRUE)){
            return(grade.factor(data))
        } else if(agrepl("male", levels(data), ignore.case = TRUE)){
            return(gender.factor(data))
        } else if(agrepl("y", levels(data), ignore.case = TRUE)){
            return(yn.bool.factor(data));
        } else {
            return(data);
        }
    }
}
order.numeric <- function(data){
    temp <- order.factors(data)
    if(!identical(temp, data)){
        return(as.numeric(order.factors(data)))
    } else {
        return(temp)
    }
}
help(read.csv)
data = read.csv("winter_pre_post_clean.csv", na.strings = "")
   colnames(data)[which(colnames(data) == "sleep")] <- "sleep.2"
    colnames(data)[which(colnames(data) == "Sleep")] <- "sleep"
    colnames(data) <- tolower(colnames(data))
        data$pre[is.na(data$pre)] <- 0
        data$grade = grade.factor(data$grade)
    data <- lapply(data, order.numeric)
data$survey
levels(data$survey)
data$fall.y.n
help(chisq.test)
help(odds)
